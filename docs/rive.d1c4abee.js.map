{"mappings":"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","sources":["node_modules/@rive-app/canvas/webpack:/rive/webpack/universalModuleDefinition","src/app.js","node_modules/@rive-app/canvas/webpack:/rive/npm/canvas_advanced/canvas_advanced.mjs","node_modules/@rive-app/canvas/webpack:/rive/src/utils/registerTouchInteractions.js","node_modules/@rive-app/canvas/webpack:/rive/webpack/bootstrap","node_modules/@rive-app/canvas/webpack:/rive/webpack/runtime/define property getters","node_modules/@rive-app/canvas/webpack:/rive/webpack/runtime/hasOwnProperty shorthand","node_modules/@rive-app/canvas/webpack:/rive/webpack/runtime/make namespace object","node_modules/@rive-app/canvas/webpack:/rive/src/rive.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rive\"] = factory();\n\telse\n\t\troot[\"rive\"] = factory();\n})(this, function() {\nreturn ","// import { loadAnimation } from \"./add-lottie\";\n\n// async function main() {\n//   const x = await loadAnimation();\n//   console.log(x);\n// }\n// main();\n\nimport { Rive } from \"@rive-app/canvas\";\n\n/**\n * Credit: https://stackoverflow.com/questions/10420352/converting-file-size-in-bytes-to-human-readable-string\n * Format bytes as human-readable text.\n *\n * @param bytes Number of bytes.\n * @param si True to use metric (SI) units, aka powers of 1000. False to use\n *           binary (IEC), aka powers of 1024.\n * @param dp Number of decimal places to display.\n *\n * @return Formatted string.\n */\nfunction humanFileSize(bytes, si = true, dp = 1) {\n  const thresh = si ? 1000 : 1024;\n\n  if (Math.abs(bytes) < thresh) {\n    return bytes + \" B\";\n  }\n\n  const units = si\n    ? [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n    : [\"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"];\n  let u = -1;\n  const r = 10 ** dp;\n\n  do {\n    bytes /= thresh;\n    ++u;\n  } while (\n    Math.round(Math.abs(bytes) * r) / r >= thresh &&\n    u < units.length - 1\n  );\n\n  return bytes.toFixed(dp) + \" \" + units[u];\n}\n\nasync function main() {\n  let currentRiveInstance;\n  const riveCanvas = document.getElementById(\"rive-canvas\");\n  const player = document.querySelector(\"lottie-player\");\n  const dropContainer = document.querySelector(\".drop-container\");\n  const fileSizeContainer = document.querySelector(\".file-size\");\n  const helperTextNode = document.querySelector(\".perf-helper-text\");\n\n  async function displayFileSizeStats(url) {\n    const req = new Request(url);\n    const res = await fetch(req);\n    const buffer = await res.arrayBuffer();\n    const fileSize = humanFileSize(new Blob([buffer]).size);\n    const fileSizeText = document.createTextNode(`File Size: ${fileSize}`);\n    helperTextNode.style.display = \"block\";\n    fileSizeContainer.appendChild(fileSizeText);\n  }\n\n  if (riveCanvas) {\n    const { width, height } = riveCanvas.getBoundingClientRect();\n    const dpr = window.devicePixelRatio || 1;\n    riveCanvas.width = dpr * width;\n    riveCanvas.height = dpr * height;\n\n    const url =\n      \"https://public.rive.app/hosted/40846/11373/jb-r1m2WqEyusZFM4ClF_A.riv\";\n    currentRiveInstance = new rive.Rive({\n      src: url, // host your Rive file and add the url to src\n      canvas: riveCanvas,\n      artboard: \"Main\",\n      stateMachines: [\"State Machine 1\"],\n      autoplay: true,\n      layout: new rive.Layout({ fit: \"cover\", alignment: \"center\" }),\n      onLoad: async () => {\n        await displayFileSizeStats(url);\n        currentRiveInstance.resizeDrawingSurfaceToCanvas();\n      },\n    });\n\n    // Detect zoom and resize canvas area smoothly\n    window.addEventListener(\n      \"resize\",\n      () => {\n        const dpr = window.devicePixelRatio || 1;\n        const { width, height } = riveCanvas.getBoundingClientRect();\n        riveCanvas.width = dpr * width;\n        riveCanvas.height = dpr * height;\n        currentRiveInstance.resizeDrawingSurfaceToCanvas();\n      },\n      false\n    );\n  }\n\n  if (player) {\n    const url = \"https://assets7.lottiefiles.com/packages/lf20_l3qxn9jy.json\";\n    await displayFileSizeStats(url);\n  }\n\n  dropContainer.addEventListener(\"dragover\", function (ev) {\n    ev.preventDefault();\n  });\n  dropContainer.addEventListener(\"drop\", function (ev) {\n    ev.preventDefault();\n\n    if (ev.dataTransfer.items) {\n      // Use DataTransferItemList interface to access the file(s)\n      for (var i = 0; i < ev.dataTransfer.items.length; i++) {\n        const droppedItem = ev.dataTransfer.items[i];\n        // If dropped items aren't files, reject them\n        if (droppedItem.kind === \"file\") {\n          if (currentRiveInstance) {\n            currentRiveInstance.cleanup();\n            currentRiveInstance = null;\n          }\n          const droppedFile = droppedItem.getAsFile();\n          const splitName = droppedFile.name.split(\".\");\n          const extension = splitName[splitName.length - 1];\n          if (extension === \"riv\" && riveCanvas) {\n            loadRiveFile(droppedFile);\n          } else if (extension === \"json\" && player) {\n            loadLottieFile(droppedFile);\n          }\n          break;\n        }\n      }\n    }\n  });\n\n  function loadLottieFile(droppedFile) {\n    const reader = new FileReader();\n    const blob = new Blob([droppedFile], { type: \"application/json\" });\n    reader.onload = function (event) {\n      player.load(reader.result);\n      const fileSize = humanFileSize(blob.size);\n      const fileSizeText = document.createTextNode(`File Size: ${fileSize}`);\n      helperTextNode.style.display = \"block\";\n      fileSizeContainer.replaceChildren(fileSizeText);\n    };\n\n    reader.readAsText(blob);\n  }\n\n  function loadRiveFile(droppedFile) {\n    const reader = new FileReader();\n    reader.onload = function (event) {\n      currentRiveInstance = new Rive({\n        buffer: event.target.result,\n        canvas: riveCanvas,\n        autoplay: false,\n        onLoad: () => {\n          // Play a state machine if it exists first, otherwise play the configured animation\n          const stateMachines = currentRiveInstance.stateMachineNames;\n          stateMachines.length\n            ? currentRiveInstance.play(stateMachines[0])\n            : r.play();\n          // currentRiveInstance.enableFPSCounter();\n          const fileSize = humanFileSize(new Blob([event.target.result]).size);\n          const fileSizeText = document.createTextNode(\n            `File Size: ${fileSize}`\n          );\n          helperTextNode.style.display = \"block\";\n          fileSizeContainer.replaceChildren(fileSizeText);\n        },\n      });\n    };\n\n    reader.readAsArrayBuffer(droppedFile);\n  }\n}\n\nmain();\n","\nvar Rive = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(Rive) {\n  Rive = Rive || {};\n\n\nnull;var m;m||(m=typeof Rive !== 'undefined' ? Rive : {});var aa,ba;m.ready=new Promise(function(b,a){aa=b;ba=a});\nfunction ca(){function b(h){const g=d;c=a=0;d=new Map;g.forEach(l=>{try{l(h)}catch(k){console.error(k)}});this.La();e&&e.fb()}let a=0,c=0,d=new Map,e=null,f=null;this.requestAnimationFrame=function(h){a||(a=requestAnimationFrame(b.bind(this)));const g=++c;d.set(g,h);return g};this.cancelAnimationFrame=function(h){d.delete(h);a&&0==d.size&&(cancelAnimationFrame(a),a=0)};this.cb=function(h){f&&(document.body.remove(f),f=null);h||(f=document.createElement(\"div\"),f.style.backgroundColor=\"black\",f.style.position=\n\"fixed\",f.style.right=0,f.style.top=0,f.style.color=\"white\",f.style.padding=\"4px\",f.innerHTML=\"RIVE FPS\",h=function(g){f.innerHTML=\"RIVE FPS \"+g.toFixed(1)},document.body.appendChild(f));e=new function(){let g=0,l=0;this.fb=function(){var k=performance.now();l?(++g,k-=l,1E3<k&&(h(1E3*g/k),g=l=0)):(l=k,g=0)}}};this.$a=function(){f&&(document.body.remove(f),f=null);e=null};this.La=function(){}}\nfunction ea(b){console.assert(!0);const a=new Map;let c=-Infinity;this.push=function(d){d=d+((1<<b)-1)>>b;a.has(d)&&clearTimeout(a.get(d));a.set(d,setTimeout(function(){a.delete(d);0==a.length?c=-Infinity:d==c&&(c=Math.max(...a.keys()),console.assert(c<d))},1E3));c=Math.max(d,c);return c<<b}}\nconst fa=new function(){function b(){if(!a){var u=document.createElement(\"canvas\"),v={alpha:1,depth:0,stencil:0,antialias:0,premultipliedAlpha:1,preserveDrawingBuffer:0,preferLowPowerToHighPerformance:0,failIfMajorPerformanceCaveat:0,enableExtensionsByDefault:1,explicitSwapControl:1,renderViaOffscreenBackBuffer:1};let q=u.getContext(\"webgl2\",v);if(q)c=2;else if(q=u.getContext(\"webgl\",v))c=1;else return console.log(\"No WebGL support. Image mesh will not be drawn.\"),!1;d=Math.min(q.getParameter(q.MAX_RENDERBUFFER_SIZE),\nq.getParameter(q.MAX_TEXTURE_SIZE));function C(F,w,A){w=q.createShader(w);q.shaderSource(w,A);q.compileShader(w);A=q.getShaderInfoLog(w);if(0<A.length)throw A;q.attachShader(F,w)}u=q.createProgram();C(u,q.VERTEX_SHADER,\"attribute vec2 vertex;\\n                attribute vec2 uv;\\n                uniform vec4 mat;\\n                uniform vec2 translate;\\n                varying vec2 st;\\n                void main() {\\n                    st = uv;\\n                    gl_Position = vec4(mat2(mat) * vertex + translate, 0, 1);\\n                }\");\nC(u,q.FRAGMENT_SHADER,\"precision highp float;\\n                uniform sampler2D image;\\n                varying vec2 st;\\n                void main() {\\n                    gl_FragColor = texture2D(image, st);\\n                }\");q.bindAttribLocation(u,0,\"vertex\");q.bindAttribLocation(u,1,\"uv\");q.linkProgram(u);v=q.getProgramInfoLog(u);if(0<v.length)throw v;e=q.getUniformLocation(u,\"mat\");f=q.getUniformLocation(u,\"translate\");q.useProgram(u);q.bindBuffer(q.ARRAY_BUFFER,q.createBuffer());q.enableVertexAttribArray(0);\nq.enableVertexAttribArray(1);q.bindBuffer(q.ELEMENT_ARRAY_BUFFER,q.createBuffer());q.uniform1i(q.getUniformLocation(u,\"image\"),0);q.pixelStorei(q.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0);a=q}return!0}let a=null,c=0,d=0,e=null,f=null,h=0,g=0;this.ob=function(){b();return d};this.Ya=function(u){if(!b())return null;const v=a.createTexture();a.bindTexture(a.TEXTURE_2D,v);a.texImage2D(a.TEXTURE_2D,0,a.RGBA,a.RGBA,a.UNSIGNED_BYTE,u);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE);a.texParameteri(a.TEXTURE_2D,\na.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.LINEAR);2==c?(a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR_MIPMAP_LINEAR),a.generateMipmap(a.TEXTURE_2D)):a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR);return v};const l=new ea(8),k=new ea(8),p=new ea(10),r=new ea(10);this.bb=function(u,v,q,C,F){if(b()){var w=l.push(u),A=k.push(v);if(a.canvas.width!=w||a.canvas.height!=A)a.canvas.width=w,a.canvas.height=A;a.viewport(0,A-v,u,v);a.disable(a.SCISSOR_TEST);\na.clearColor(0,0,0,0);a.clear(a.COLOR_BUFFER_BIT);a.enable(a.SCISSOR_TEST);q.sort((z,da)=>da.Oa-z.Oa);w=p.push(C);h!=w&&(a.bufferData(a.ARRAY_BUFFER,8*w,a.DYNAMIC_DRAW),h=w);w=0;for(var G of q)a.bufferSubData(a.ARRAY_BUFFER,w,G.Aa),w+=4*G.Aa.length;console.assert(w==4*C);for(var N of q)a.bufferSubData(a.ARRAY_BUFFER,w,N.Ra),w+=4*N.Ra.length;console.assert(w==8*C);w=r.push(F);g!=w&&(a.bufferData(a.ELEMENT_ARRAY_BUFFER,2*w,a.DYNAMIC_DRAW),g=w);G=0;for(var X of q)a.bufferSubData(a.ELEMENT_ARRAY_BUFFER,\nG,X.indices),G+=2*X.indices.length;console.assert(G==2*F);X=0;N=!0;w=G=0;for(const z of q){z.image.va!=X&&(a.bindTexture(a.TEXTURE_2D,z.image.Va||null),X=z.image.va);z.rb?(a.scissor(z.Ea,A-z.Fa-z.Ka,z.yb,z.Ka),N=!0):N&&(a.scissor(0,A-v,u,v),N=!1);q=2/u;const da=-2/v;a.uniform4f(e,z.la[0]*q*z.ra,z.la[1]*da*z.sa,z.la[2]*q*z.ra,z.la[3]*da*z.sa);a.uniform2f(f,z.la[4]*q*z.ra+q*(z.Ea-z.pb*z.ra)-1,z.la[5]*da*z.sa+da*(z.Fa-z.qb*z.sa)+1);a.vertexAttribPointer(0,2,a.FLOAT,!1,0,w);a.vertexAttribPointer(1,2,\na.FLOAT,!1,0,w+4*C);a.drawElements(a.TRIANGLES,z.indices.length,a.UNSIGNED_SHORT,G);w+=4*z.Aa.length;G+=2*z.indices.length}console.assert(w==4*C);console.assert(G==2*F)}};this.canvas=function(){return b()&&a.canvas}};\nRive.onRuntimeInitialized=function(){function b(n){switch(n){case k.srcOver:return\"source-over\";case k.screen:return\"screen\";case k.overlay:return\"overlay\";case k.darken:return\"darken\";case k.lighten:return\"lighten\";case k.colorDodge:return\"color-dodge\";case k.colorBurn:return\"color-burn\";case k.hardLight:return\"hard-light\";case k.softLight:return\"soft-light\";case k.difference:return\"difference\";case k.exclusion:return\"exclusion\";case k.multiply:return\"multiply\";case k.hue:return\"hue\";case k.saturation:return\"saturation\";\ncase k.color:return\"color\";case k.luminosity:return\"luminosity\"}}function a(n){return\"rgba(\"+((16711680&n)>>>16)+\",\"+((65280&n)>>>8)+\",\"+((255&n)>>>0)+\",\"+((4278190080&n)>>>24)/255+\")\"}function c(){0<G.length&&(fa.bb(A.drawWidth(),A.drawHeight(),G,N,X),G=[],X=N=0,A.reset(512,512));for(const n of w){for(const t of n.da)t();n.da=[]}w.clear()}var d=Rive.RenderPaintStyle;const e=Rive.RenderPath,f=Rive.RenderPaint,h=Rive.Renderer,g=Rive.StrokeCap,l=Rive.StrokeJoin,k=Rive.BlendMode,p=d.fill,r=d.stroke,\nu=Rive.FillRule.evenOdd;let v=1;var q=Rive.RenderImage.extend(\"CanvasRenderImage\",{__construct:function(){this.__parent.__construct.call(this);this.va=v;v=v+1&2147483647||1},decode:function(n){let t=Xa;t.total++;var y=this,D=new Image;D.src=URL.createObjectURL(new Blob([n],{type:\"image/png\"}));D.onload=function(){y.Ta=D;y.Va=fa.Ya(D);y.size(D.width,D.height);t.loaded++;if(t.loaded===t.total){const B=t.ready;B&&(B(),t.ready=null)}}}}),C=e.extend(\"CanvasRenderPath\",{__construct:function(){this.__parent.__construct.call(this);\nthis.ga=new Path2D},reset:function(){this.ga=new Path2D},addPath:function(n,t){var y=this.ga,D=y.addPath;n=n.ga;const B=new DOMMatrix;B.a=t.xx;B.b=t.xy;B.c=t.yx;B.d=t.yy;B.e=t.tx;B.f=t.ty;D.call(y,n,B)},fillRule:function(n){this.Ca=n},moveTo:function(n,t){this.ga.moveTo(n,t)},lineTo:function(n,t){this.ga.lineTo(n,t)},cubicTo:function(n,t,y,D,B,I){this.ga.bezierCurveTo(n,t,y,D,B,I)},close:function(){this.ga.closePath()}}),F=f.extend(\"CanvasRenderPaint\",{color:function(n){this.Da=a(n)},thickness:function(n){this.Wa=\nn},join:function(n){switch(n){case l.miter:this.ua=\"miter\";break;case l.round:this.ua=\"round\";break;case l.bevel:this.ua=\"bevel\"}},cap:function(n){switch(n){case g.butt:this.ta=\"butt\";break;case g.round:this.ta=\"round\";break;case g.square:this.ta=\"square\"}},style:function(n){this.Ua=n},blendMode:function(n){this.Sa=b(n)},linearGradient:function(n,t,y,D){this.oa={Pa:n,Qa:t,Ha:y,Ia:D,za:[]}},radialGradient:function(n,t,y,D){this.oa={Pa:n,Qa:t,Ha:y,Ia:D,za:[],mb:!0}},addStop:function(n,t){this.oa.za.push({color:n,\nstop:t})},completeGradient:function(){},draw:function(n,t,y){let D=this.Ua;var B=this.Da,I=this.oa;n.globalCompositeOperation=this.Sa;if(null!=I){B=I.Pa;var L=I.Qa;const T=I.Ha;var R=I.Ia;const S=I.za;I.mb?(I=T-B,R-=L,B=n.createRadialGradient(B,L,0,B,L,Math.sqrt(I*I+R*R))):B=n.createLinearGradient(B,L,T,R);for(let U=0,H=S.length;U<H;U++)L=S[U],B.addColorStop(L.stop,a(L.color));this.Da=B;this.oa=null}switch(D){case r:n.strokeStyle=B;n.lineWidth=this.Wa;n.lineCap=this.ta;n.lineJoin=this.ua;n.stroke(t);\nbreak;case p:n.fillStyle=B,n.fill(t,y)}}});const w=new Set;let A=null,G=[],N=0,X=0;var z=Rive.CanvasRenderer=h.extend(\"Renderer\",{__construct:function(n){this.__parent.__construct.call(this);this.fa=[1,0,0,1,0,0];this.Z=n.getContext(\"2d\");this.Ba=n;this.da=[]},save:function(){this.fa.push(...this.fa.slice(this.fa.length-6));this.da.push(this.Z.save.bind(this.Z))},restore:function(){const n=this.fa.length-6;if(6>n)throw\"restore() called without matching save().\";this.fa.splice(n);this.da.push(this.Z.restore.bind(this.Z))},\ntransform:function(n){const t=this.fa,y=t.length-6;t.splice(y,6,t[y]*n.xx+t[y+2]*n.xy,t[y+1]*n.xx+t[y+3]*n.xy,t[y]*n.yx+t[y+2]*n.yy,t[y+1]*n.yx+t[y+3]*n.yy,t[y]*n.tx+t[y+2]*n.ty+t[y+4],t[y+1]*n.tx+t[y+3]*n.ty+t[y+5]);this.da.push(this.Z.transform.bind(this.Z,n.xx,n.xy,n.yx,n.yy,n.tx,n.ty))},rotate:function(n){const t=Math.sin(n);n=Math.cos(n);this.transform({xx:n,xy:t,yx:-t,yy:n,tx:0,ty:0})},_drawPath:function(n,t){this.da.push(t.draw.bind(t,this.Z,n.ga,n.Ca===u?\"evenodd\":\"nonzero\"))},_drawImage:function(n,\nt,y){var D=n.Ta;if(D){var B=this.Z,I=b(t);this.da.push(function(){B.globalCompositeOperation=I;B.globalAlpha=y;B.drawImage(D,0,0);B.globalAlpha=1})}},_getMatrix:function(n){const t=this.fa,y=t.length-6;for(let D=0;6>D;++D)n[D]=t[y+D]},_drawImageMesh:function(n,t,y,D,B,I,L,R,T,S){var U=this.Z.canvas.width,H=this.Z.canvas.height;const pb=T-L,qb=S-R;L=Math.max(L,0);R=Math.max(R,0);T=Math.min(T,U);S=Math.min(S,H);const sa=T-L,ta=S-R;console.assert(sa<=Math.min(pb,U));console.assert(ta<=Math.min(qb,H));\nif(!(0>=sa||0>=ta)){T=sa<pb||ta<qb;U=S=1;var ia=Math.ceil(sa*S),ja=Math.ceil(ta*U);H=fa.ob();ia>H&&(S*=H/ia,ia=H);ja>H&&(U*=H/ja,ja=H);A||(A=new m.DynamicRectanizer(H),A.reset(512,512));H=A.addRect(ia,ja);0>H&&(c(),w.add(this),H=A.addRect(ia,ja),console.assert(0<=H));var rb=H&65535,sb=H>>16;G.push({la:this.fa.slice(this.fa.length-6),image:n,Ea:rb,Fa:sb,pb:L,qb:R,yb:ia,Ka:ja,ra:S,sa:U,Aa:new Float32Array(D),Ra:new Float32Array(B),indices:new Uint16Array(I),rb:T,Oa:n.va<<1|(T?1:0)});N+=D.length;X+=\nI.length;var na=this.Z,Yb=b(t);this.da.push(function(){na.save();na.resetTransform();na.globalCompositeOperation=Yb;na.globalAlpha=y;na.drawImage(fa.canvas(),rb,sb,ia,ja,L,R,sa,ta);na.restore()})}},_clipPath:function(n){this.da.push(this.Z.clip.bind(this.Z,n.ga,n.Ca===u?\"evenodd\":\"nonzero\"))},clear:function(){w.add(this);this.da.push(this.Z.clearRect.bind(this.Z,0,0,this.Ba.width,this.Ba.height))},flush:function(){},translate:function(n,t){this.transform({xx:1,xy:0,yx:0,yy:1,tx:n,ty:t})}});Rive.makeRenderer=\nfunction(n){return new z(n)};Rive.renderFactory={makeRenderPaint:function(){return new F},makeRenderPath:function(){return new C},makeRenderImage:function(){return new q}};let da=Rive.load,Xa=null;Rive.load=function(n){return new Promise(function(t){let y=null;Xa={total:0,loaded:0,ready:function(){t(y)}};y=da(n);0==Xa.total&&t(y)})};d=new ca;Rive.requestAnimationFrame=d.requestAnimationFrame.bind(d);Rive.cancelAnimationFrame=d.cancelAnimationFrame.bind(d);Rive.enableFPSCounter=d.cb.bind(d);Rive.disableFPSCounter=\nd.$a;d.La=c;Rive.cleanup=function(){A&&A.delete()}};var ha=Object.assign({},m),ka=\"object\"==typeof window,la=\"function\"==typeof importScripts,x=\"\",ma,oa;\nif(ka||la)la?x=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(x=document.currentScript.src),_scriptDir&&(x=_scriptDir),0!==x.indexOf(\"blob:\")?x=x.substr(0,x.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):x=\"\",la&&(oa=b=>{var a=new XMLHttpRequest;a.open(\"GET\",b,!1);a.responseType=\"arraybuffer\";a.send(null);return new Uint8Array(a.response)}),ma=(b,a,c)=>{var d=new XMLHttpRequest;d.open(\"GET\",b,!0);d.responseType=\"arraybuffer\";d.onload=()=>{200==d.status||0==d.status&&d.response?\na(d.response):c()};d.onerror=c;d.send(null)};var pa=m.print||console.log.bind(console),qa=m.printErr||console.warn.bind(console);Object.assign(m,ha);ha=null;var ra;m.wasmBinary&&(ra=m.wasmBinary);var noExitRuntime=m.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&ua(\"no native wasm support detected\");var va,wa=!1,xa=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction ya(b,a,c){var d=a+c;for(c=a;b[c]&&!(c>=d);)++c;if(16<c-a&&b.buffer&&xa)return xa.decode(b.subarray(a,c));for(d=\"\";a<c;){var e=b[a++];if(e&128){var f=b[a++]&63;if(192==(e&224))d+=String.fromCharCode((e&31)<<6|f);else{var h=b[a++]&63;e=224==(e&240)?(e&15)<<12|f<<6|h:(e&7)<<18|f<<12|h<<6|b[a++]&63;65536>e?d+=String.fromCharCode(e):(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023))}}else d+=String.fromCharCode(e)}return d}var za,Aa,E,Ba,Ca,Da,J,Ea,Fa;\nfunction Ga(){var b=va.buffer;za=b;m.HEAP8=Aa=new Int8Array(b);m.HEAP16=Ba=new Int16Array(b);m.HEAP32=Da=new Int32Array(b);m.HEAPU8=E=new Uint8Array(b);m.HEAPU16=Ca=new Uint16Array(b);m.HEAPU32=J=new Uint32Array(b);m.HEAPF32=Ea=new Float32Array(b);m.HEAPF64=Fa=new Float64Array(b)}var Ha,Ia=[],Ja=[],Ka=[];function La(){var b=m.preRun.shift();Ia.unshift(b)}var Ma=0,Na=null,Oa=null;\nfunction ua(b){if(m.onAbort)m.onAbort(b);b=\"Aborted(\"+b+\")\";qa(b);wa=!0;b=new WebAssembly.RuntimeError(b+\". Build with -sASSERTIONS for more info.\");ba(b);throw b;}function Pa(){return K.startsWith(\"data:application/octet-stream;base64,\")}var K;K=\"canvas_advanced.wasm\";if(!Pa()){var Qa=K;K=m.locateFile?m.locateFile(Qa,x):x+Qa}function Ra(){var b=K;try{if(b==K&&ra)return new Uint8Array(ra);if(oa)return oa(b);throw\"both async and sync fetching of the wasm failed\";}catch(a){ua(a)}}\nfunction Sa(){if(!ra&&(ka||la)){if(\"function\"==typeof fetch&&!K.startsWith(\"file://\"))return fetch(K,{credentials:\"same-origin\"}).then(function(b){if(!b.ok)throw\"failed to load wasm binary file at '\"+K+\"'\";return b.arrayBuffer()}).catch(function(){return Ra()});if(ma)return new Promise(function(b,a){ma(K,function(c){b(new Uint8Array(c))},a)})}return Promise.resolve().then(function(){return Ra()})}function Ta(b){for(;0<b.length;)b.shift()(m)}\nfunction Ua(b){if(void 0===b)return\"_unknown\";b=b.replace(/[^a-zA-Z0-9_]/g,\"$\");var a=b.charCodeAt(0);return 48<=a&&57>=a?\"_\"+b:b}function Va(b,a){b=Ua(b);return function(){null;return a.apply(this,arguments)}}var M=[{},{value:void 0},{value:null},{value:!0},{value:!1}],Wa=[];\nfunction Ya(b){var a=Error,c=Va(b,function(d){this.name=b;this.message=d;d=Error(d).stack;void 0!==d&&(this.stack=this.toString()+\"\\n\"+d.replace(/^Error(:[^\\n]*)?\\n/,\"\"))});c.prototype=Object.create(a.prototype);c.prototype.constructor=c;c.prototype.toString=function(){return void 0===this.message?this.name:this.name+\": \"+this.message};return c}var Za=void 0;function O(b){throw new Za(b);}\nvar $a=b=>{b||O(\"Cannot use deleted val. handle = \"+b);return M[b].value},P=b=>{switch(b){case void 0:return 1;case null:return 2;case !0:return 3;case !1:return 4;default:var a=Wa.length?Wa.pop():M.length;M[a]={ya:1,value:b};return a}},ab=void 0,bb=void 0;function Q(b){for(var a=\"\";E[b];)a+=bb[E[b++]];return a}var cb=[];function db(){for(;cb.length;){var b=cb.pop();b.U.ka=!1;b[\"delete\"]()}}var eb=void 0,V={};\nfunction fb(b,a){for(void 0===a&&O(\"ptr should not be undefined\");b.$;)a=b.na(a),b=b.$;return a}var gb={};function hb(b){b=ib(b);var a=Q(b);jb(b);return a}function kb(b,a){var c=gb[b];void 0===c&&O(a+\" has unknown type \"+hb(b));return c}function lb(){}var mb=!1;function nb(b){--b.count.value;0===b.count.value&&(b.aa?b.ca.ha(b.aa):b.X.V.ha(b.W))}function ob(b,a,c){if(a===c)return b;if(void 0===c.$)return null;b=ob(b,a,c.$);return null===b?null:c.ab(b)}var tb={};\nfunction ub(b,a){a=fb(b,a);return V[a]}var vb=void 0;function wb(b){throw new vb(b);}function xb(b,a){a.X&&a.W||wb(\"makeClassHandle requires ptr and ptrType\");!!a.ca!==!!a.aa&&wb(\"Both smartPtrType and smartPtr must be specified\");a.count={value:1};return yb(Object.create(b,{U:{value:a}}))}\nfunction yb(b){if(\"undefined\"===typeof FinalizationRegistry)return yb=a=>a,b;mb=new FinalizationRegistry(a=>{nb(a.U)});yb=a=>{var c=a.U;c.aa&&mb.register(a,{U:c},a);return a};lb=a=>{mb.unregister(a)};return yb(b)}var zb={};function Ab(b){for(;b.length;){var a=b.pop();b.pop()(a)}}function Bb(b){return this.fromWireType(Da[b>>2])}var Cb={},Db={};\nfunction W(b,a,c){function d(g){g=c(g);g.length!==b.length&&wb(\"Mismatched type converter count\");for(var l=0;l<b.length;++l)Y(b[l],g[l])}b.forEach(function(g){Db[g]=a});var e=Array(a.length),f=[],h=0;a.forEach((g,l)=>{gb.hasOwnProperty(g)?e[l]=gb[g]:(f.push(g),Cb.hasOwnProperty(g)||(Cb[g]=[]),Cb[g].push(()=>{e[l]=gb[g];++h;h===f.length&&d(e)}))});0===f.length&&d(e)}\nfunction Eb(b){switch(b){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+b);}}\nfunction Y(b,a,c={}){if(!(\"argPackAdvance\"in a))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");var d=a.name;b||O('type \"'+d+'\" must have a positive integer typeid pointer');if(gb.hasOwnProperty(b)){if(c.lb)return;O(\"Cannot register type '\"+d+\"' twice\")}gb[b]=a;delete Db[b];Cb.hasOwnProperty(b)&&(a=Cb[b],delete Cb[b],a.forEach(e=>e()))}function Fb(b){O(b.U.X.V.name+\" instance already deleted\")}function Gb(){}\nfunction Hb(b,a,c){if(void 0===b[a].Y){var d=b[a];b[a]=function(){b[a].Y.hasOwnProperty(arguments.length)||O(\"Function '\"+c+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+b[a].Y+\")!\");return b[a].Y[arguments.length].apply(this,arguments)};b[a].Y=[];b[a].Y[d.ja]=d}}\nfunction Ib(b,a,c){m.hasOwnProperty(b)?((void 0===c||void 0!==m[b].Y&&void 0!==m[b].Y[c])&&O(\"Cannot register public name '\"+b+\"' twice\"),Hb(m,b,b),m.hasOwnProperty(c)&&O(\"Cannot register multiple overloads of a function with the same number of arguments (\"+c+\")!\"),m[b].Y[c]=a):(m[b]=a,void 0!==c&&(m[b].zb=c))}function Jb(b,a,c,d,e,f,h,g){this.name=b;this.constructor=a;this.ea=c;this.ha=d;this.$=e;this.gb=f;this.na=h;this.ab=g;this.Ma=[]}\nfunction Kb(b,a,c){for(;a!==c;)a.na||O(\"Expected null or instance of \"+c.name+\", got an instance of \"+a.name),b=a.na(b),a=a.$;return b}function Lb(b,a){if(null===a)return this.wa&&O(\"null is not a valid \"+this.name),0;a.U||O('Cannot pass \"'+Mb(a)+'\" as a '+this.name);a.U.W||O(\"Cannot pass deleted object as a pointer of type \"+this.name);return Kb(a.U.W,a.U.X.V,this.V)}\nfunction Nb(b,a){if(null===a){this.wa&&O(\"null is not a valid \"+this.name);if(this.qa){var c=this.xa();null!==b&&b.push(this.ha,c);return c}return 0}a.U||O('Cannot pass \"'+Mb(a)+'\" as a '+this.name);a.U.W||O(\"Cannot pass deleted object as a pointer of type \"+this.name);!this.pa&&a.U.X.pa&&O(\"Cannot convert argument of type \"+(a.U.ca?a.U.ca.name:a.U.X.name)+\" to parameter type \"+this.name);c=Kb(a.U.W,a.U.X.V,this.V);if(this.qa)switch(void 0===a.U.aa&&O(\"Passing raw pointer to smart pointer is illegal\"),\nthis.xb){case 0:a.U.ca===this?c=a.U.aa:O(\"Cannot convert argument of type \"+(a.U.ca?a.U.ca.name:a.U.X.name)+\" to parameter type \"+this.name);break;case 1:c=a.U.aa;break;case 2:if(a.U.ca===this)c=a.U.aa;else{var d=a.clone();c=this.tb(c,P(function(){d[\"delete\"]()}));null!==b&&b.push(this.ha,c)}break;default:O(\"Unsupporting sharing policy\")}return c}\nfunction Ob(b,a){if(null===a)return this.wa&&O(\"null is not a valid \"+this.name),0;a.U||O('Cannot pass \"'+Mb(a)+'\" as a '+this.name);a.U.W||O(\"Cannot pass deleted object as a pointer of type \"+this.name);a.U.X.pa&&O(\"Cannot convert argument of type \"+a.U.X.name+\" to parameter type \"+this.name);return Kb(a.U.W,a.U.X.V,this.V)}\nfunction Pb(b,a,c,d){this.name=b;this.V=a;this.wa=c;this.pa=d;this.qa=!1;this.ha=this.tb=this.xa=this.Na=this.xb=this.sb=void 0;void 0!==a.$?this.toWireType=Nb:(this.toWireType=d?Lb:Ob,this.ba=null)}function Qb(b,a,c){m.hasOwnProperty(b)||wb(\"Replacing nonexistant public symbol\");void 0!==m[b].Y&&void 0!==c?m[b].Y[c]=a:(m[b]=a,m[b].ja=c)}\nfunction Rb(b,a){var c=[];return function(){c.length=0;Object.assign(c,arguments);if(b.includes(\"j\")){var d=m[\"dynCall_\"+b];d=c&&c.length?d.apply(null,[a].concat(c)):d.call(null,a)}else d=Ha.get(a).apply(null,c);return d}}function Z(b,a){b=Q(b);var c=b.includes(\"j\")?Rb(b,a):Ha.get(a);\"function\"!=typeof c&&O(\"unknown function pointer with signature \"+b+\": \"+a);return c}var Sb=void 0;\nfunction Tb(b,a){function c(f){e[f]||gb[f]||(Db[f]?Db[f].forEach(c):(d.push(f),e[f]=!0))}var d=[],e={};a.forEach(c);throw new Sb(b+\": \"+d.map(hb).join([\", \"]));}\nfunction Ub(b,a,c,d,e){var f=a.length;2>f&&O(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");var h=null!==a[1]&&null!==c,g=!1;for(c=1;c<a.length;++c)if(null!==a[c]&&void 0===a[c].ba){g=!0;break}var l=\"void\"!==a[0].name,k=f-2,p=Array(k),r=[],u=[];return function(){arguments.length!==k&&O(\"function \"+b+\" called with \"+arguments.length+\" arguments, expected \"+k+\" args!\");u.length=0;r.length=h?2:1;r[0]=e;if(h){var v=a[1].toWireType(u,this);r[1]=v}for(var q=0;q<k;++q)p[q]=\na[q+2].toWireType(u,arguments[q]),r.push(p[q]);q=d.apply(null,r);if(g)Ab(u);else for(var C=h?1:2;C<a.length;C++){var F=1===C?v:p[C-2];null!==a[C].ba&&a[C].ba(F)}v=l?a[0].fromWireType(q):void 0;return v}}function Vb(b,a){for(var c=[],d=0;d<b;d++)c.push(J[a+4*d>>2]);return c}\nfunction Wb(b,a,c){b instanceof Object||O(c+' with invalid \"this\": '+b);b instanceof a.V.constructor||O(c+' incompatible with \"this\" of type '+b.constructor.name);b.U.W||O(\"cannot call emscripten binding method \"+c+\" on deleted object\");return Kb(b.U.W,b.U.X.V,a.V)}function Xb(b){4<b&&0===--M[b].ya&&(M[b]=void 0,Wa.push(b))}\nfunction Zb(b,a,c){switch(a){case 0:return function(d){return this.fromWireType((c?Aa:E)[d])};case 1:return function(d){return this.fromWireType((c?Ba:Ca)[d>>1])};case 2:return function(d){return this.fromWireType((c?Da:J)[d>>2])};default:throw new TypeError(\"Unknown integer type: \"+b);}}function Mb(b){if(null===b)return\"null\";var a=typeof b;return\"object\"===a||\"array\"===a||\"function\"===a?b.toString():\"\"+b}\nfunction $b(b,a){switch(a){case 2:return function(c){return this.fromWireType(Ea[c>>2])};case 3:return function(c){return this.fromWireType(Fa[c>>3])};default:throw new TypeError(\"Unknown float type: \"+b);}}\nfunction ac(b,a,c){switch(a){case 0:return c?function(d){return Aa[d]}:function(d){return E[d]};case 1:return c?function(d){return Ba[d>>1]}:function(d){return Ca[d>>1]};case 2:return c?function(d){return Da[d>>2]}:function(d){return J[d>>2]};default:throw new TypeError(\"Unknown integer type: \"+b);}}var bc=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0;\nfunction cc(b,a){var c=b>>1;for(var d=c+a/2;!(c>=d)&&Ca[c];)++c;c<<=1;if(32<c-b&&bc)return bc.decode(E.subarray(b,c));c=\"\";for(d=0;!(d>=a/2);++d){var e=Ba[b+2*d>>1];if(0==e)break;c+=String.fromCharCode(e)}return c}function dc(b,a,c){void 0===c&&(c=2147483647);if(2>c)return 0;c-=2;var d=a;c=c<2*b.length?c/2:b.length;for(var e=0;e<c;++e)Ba[a>>1]=b.charCodeAt(e),a+=2;Ba[a>>1]=0;return a-d}function ec(b){return 2*b.length}\nfunction fc(b,a){for(var c=0,d=\"\";!(c>=a/4);){var e=Da[b+4*c>>2];if(0==e)break;++c;65536<=e?(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023)):d+=String.fromCharCode(e)}return d}function gc(b,a,c){void 0===c&&(c=2147483647);if(4>c)return 0;var d=a;c=d+c-4;for(var e=0;e<b.length;++e){var f=b.charCodeAt(e);if(55296<=f&&57343>=f){var h=b.charCodeAt(++e);f=65536+((f&1023)<<10)|h&1023}Da[a>>2]=f;a+=4;if(a+4>c)break}Da[a>>2]=0;return a-d}\nfunction hc(b){for(var a=0,c=0;c<b.length;++c){var d=b.charCodeAt(c);55296<=d&&57343>=d&&++c;a+=4}return a}var ic={};function jc(b){var a=ic[b];return void 0===a?Q(b):a}var kc=[];function lc(b){var a=kc.length;kc.push(b);return a}function mc(b,a){for(var c=Array(b),d=0;d<b;++d)c[d]=kb(J[a+4*d>>2],\"parameter \"+d);return c}var nc=[],oc=[null,[],[]];Za=m.BindingError=Ya(\"BindingError\");m.count_emval_handles=function(){for(var b=0,a=5;a<M.length;++a)void 0!==M[a]&&++b;return b};\nm.get_first_emval=function(){for(var b=5;b<M.length;++b)if(void 0!==M[b])return M[b];return null};ab=m.PureVirtualError=Ya(\"PureVirtualError\");for(var pc=Array(256),qc=0;256>qc;++qc)pc[qc]=String.fromCharCode(qc);bb=pc;m.getInheritedInstanceCount=function(){return Object.keys(V).length};m.getLiveInheritedInstances=function(){var b=[],a;for(a in V)V.hasOwnProperty(a)&&b.push(V[a]);return b};m.flushPendingDeletes=db;m.setDelayFunction=function(b){eb=b;cb.length&&eb&&eb(db)};vb=m.InternalError=Ya(\"InternalError\");\nGb.prototype.isAliasOf=function(b){if(!(this instanceof Gb&&b instanceof Gb))return!1;var a=this.U.X.V,c=this.U.W,d=b.U.X.V;for(b=b.U.W;a.$;)c=a.na(c),a=a.$;for(;d.$;)b=d.na(b),d=d.$;return a===d&&c===b};Gb.prototype.clone=function(){this.U.W||Fb(this);if(this.U.ma)return this.U.count.value+=1,this;var b=yb,a=Object,c=a.create,d=Object.getPrototypeOf(this),e=this.U;b=b(c.call(a,d,{U:{value:{count:e.count,ka:e.ka,ma:e.ma,W:e.W,X:e.X,aa:e.aa,ca:e.ca}}}));b.U.count.value+=1;b.U.ka=!1;return b};\nGb.prototype[\"delete\"]=function(){this.U.W||Fb(this);this.U.ka&&!this.U.ma&&O(\"Object already scheduled for deletion\");lb(this);nb(this.U);this.U.ma||(this.U.aa=void 0,this.U.W=void 0)};Gb.prototype.isDeleted=function(){return!this.U.W};Gb.prototype.deleteLater=function(){this.U.W||Fb(this);this.U.ka&&!this.U.ma&&O(\"Object already scheduled for deletion\");cb.push(this);1===cb.length&&eb&&eb(db);this.U.ka=!0;return this};Pb.prototype.hb=function(b){this.Na&&(b=this.Na(b));return b};\nPb.prototype.Ga=function(b){this.ha&&this.ha(b)};Pb.prototype.argPackAdvance=8;Pb.prototype.readValueFromPointer=Bb;Pb.prototype.deleteObject=function(b){if(null!==b)b[\"delete\"]()};\nPb.prototype.fromWireType=function(b){function a(){return this.qa?xb(this.V.ea,{X:this.sb,W:c,ca:this,aa:b}):xb(this.V.ea,{X:this,W:b})}var c=this.hb(b);if(!c)return this.Ga(b),null;var d=ub(this.V,c);if(void 0!==d){if(0===d.U.count.value)return d.U.W=c,d.U.aa=b,d.clone();d=d.clone();this.Ga(b);return d}d=this.V.gb(c);d=tb[d];if(!d)return a.call(this);d=this.pa?d.Xa:d.pointerType;var e=ob(c,this.V,d.V);return null===e?a.call(this):this.qa?xb(d.V.ea,{X:d,W:e,ca:this,aa:b}):xb(d.V.ea,{X:d,W:e})};\nSb=m.UnboundTypeError=Ya(\"UnboundTypeError\");\nvar sc={l:function(b,a,c){b=Q(b);a=kb(a,\"wrapper\");c=$a(c);var d=[].slice,e=a.V,f=e.ea,h=e.$.ea,g=e.$.constructor;b=Va(b,function(){e.$.Ma.forEach(function(k){if(this[k]===h[k])throw new ab(\"Pure virtual function \"+k+\" must be implemented in JavaScript\");}.bind(this));Object.defineProperty(this,\"__parent\",{value:f});this.__construct.apply(this,d.call(arguments))});f.__construct=function(){this===f&&O(\"Pass correct 'this' to __construct\");var k=g.implement.apply(void 0,[this].concat(d.call(arguments)));\nlb(k);var p=k.U;k.notifyOnDestruction();p.ma=!0;Object.defineProperties(this,{U:{value:p}});yb(this);k=p.W;k=fb(e,k);V.hasOwnProperty(k)?O(\"Tried to register registered instance: \"+k):V[k]=this};f.__destruct=function(){this===f&&O(\"Pass correct 'this' to __destruct\");lb(this);var k=this.U.W;k=fb(e,k);V.hasOwnProperty(k)?delete V[k]:O(\"Tried to unregister unregistered instance: \"+k)};b.prototype=Object.create(f);for(var l in c)b.prototype[l]=c[l];return P(b)},I:function(b){var a=zb[b];delete zb[b];\nvar c=a.xa,d=a.ha,e=a.Ja,f=e.map(h=>h.kb).concat(e.map(h=>h.vb));W([b],f,h=>{var g={};e.forEach((l,k)=>{var p=h[k],r=l.ib,u=l.jb,v=h[k+e.length],q=l.ub,C=l.wb;g[l.eb]={read:F=>p.fromWireType(r(u,F)),write:(F,w)=>{var A=[];q(C,F,v.toWireType(A,w));Ab(A)}}});return[{name:a.name,fromWireType:function(l){var k={},p;for(p in g)k[p]=g[p].read(l);d(l);return k},toWireType:function(l,k){for(var p in g)if(!(p in k))throw new TypeError('Missing field:  \"'+p+'\"');var r=c();for(p in g)g[p].write(r,k[p]);null!==\nl&&l.push(d,r);return r},argPackAdvance:8,readValueFromPointer:Bb,ba:d}]})},x:function(){},B:function(b,a,c,d,e){var f=Eb(c);a=Q(a);Y(b,{name:a,fromWireType:function(h){return!!h},toWireType:function(h,g){return g?d:e},argPackAdvance:8,readValueFromPointer:function(h){if(1===c)var g=Aa;else if(2===c)g=Ba;else if(4===c)g=Da;else throw new TypeError(\"Unknown boolean type size: \"+a);return this.fromWireType(g[h>>f])},ba:null})},c:function(b,a,c,d,e,f,h,g,l,k,p,r,u){p=Q(p);f=Z(e,f);g&&(g=Z(h,g));k&&(k=\nZ(l,k));u=Z(r,u);var v=Ua(p);Ib(v,function(){Tb(\"Cannot construct \"+p+\" due to unbound types\",[d])});W([b,a,c],d?[d]:[],function(q){q=q[0];if(d){var C=q.V;var F=C.ea}else F=Gb.prototype;q=Va(v,function(){if(Object.getPrototypeOf(this)!==w)throw new Za(\"Use 'new' to construct \"+p);if(void 0===A.ia)throw new Za(p+\" has no accessible constructor\");var N=A.ia[arguments.length];if(void 0===N)throw new Za(\"Tried to invoke ctor of \"+p+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+\nObject.keys(A.ia).toString()+\") parameters instead!\");return N.apply(this,arguments)});var w=Object.create(F,{constructor:{value:q}});q.prototype=w;var A=new Jb(p,q,w,u,C,f,g,k);C=new Pb(p,A,!0,!1);F=new Pb(p+\"*\",A,!1,!1);var G=new Pb(p+\" const*\",A,!1,!0);tb[b]={pointerType:F,Xa:G};Qb(v,q);return[C,F,G]})},h:function(b,a,c,d,e,f,h){var g=Vb(c,d);a=Q(a);f=Z(e,f);W([],[b],function(l){function k(){Tb(\"Cannot call \"+p+\" due to unbound types\",g)}l=l[0];var p=l.name+\".\"+a;a.startsWith(\"@@\")&&(a=Symbol[a.substring(2)]);\nvar r=l.V.constructor;void 0===r[a]?(k.ja=c-1,r[a]=k):(Hb(r,a,p),r[a].Y[c-1]=k);W([],g,function(u){u=Ub(p,[u[0],null].concat(u.slice(1)),null,f,h);void 0===r[a].Y?(u.ja=c-1,r[a]=u):r[a].Y[c-1]=u;return[]});return[]})},n:function(b,a,c,d,e,f,h,g){a=Q(a);f=Z(e,f);W([],[b],function(l){l=l[0];var k=l.name+\".\"+a,p={get:function(){Tb(\"Cannot access \"+k+\" due to unbound types\",[c])},enumerable:!0,configurable:!0};p.set=g?()=>{Tb(\"Cannot access \"+k+\" due to unbound types\",[c])}:()=>{O(k+\" is a read-only property\")};\nObject.defineProperty(l.V.constructor,a,p);W([],[c],function(r){r=r[0];var u={get:function(){return r.fromWireType(f(d))},enumerable:!0};g&&(g=Z(h,g),u.set=v=>{var q=[];g(d,r.toWireType(q,v));Ab(q)});Object.defineProperty(l.V.constructor,a,u);return[]});return[]})},k:function(b,a,c,d,e,f){0<a||ua();var h=Vb(a,c);e=Z(d,e);W([],[b],function(g){g=g[0];var l=\"constructor \"+g.name;void 0===g.V.ia&&(g.V.ia=[]);if(void 0!==g.V.ia[a-1])throw new Za(\"Cannot register multiple constructors with identical number of parameters (\"+\n(a-1)+\") for class '\"+g.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");g.V.ia[a-1]=()=>{Tb(\"Cannot construct \"+g.name+\" due to unbound types\",h)};W([],h,function(k){k.splice(1,0,null);g.V.ia[a-1]=Ub(l,k,null,e,f);return[]});return[]})},a:function(b,a,c,d,e,f,h,g){var l=Vb(c,d);a=Q(a);f=Z(e,f);W([],[b],function(k){function p(){Tb(\"Cannot call \"+r+\" due to unbound types\",l)}k=k[0];var r=k.name+\".\"+a;a.startsWith(\"@@\")&&(a=Symbol[a.substring(2)]);\ng&&k.V.Ma.push(a);var u=k.V.ea,v=u[a];void 0===v||void 0===v.Y&&v.className!==k.name&&v.ja===c-2?(p.ja=c-2,p.className=k.name,u[a]=p):(Hb(u,a,r),u[a].Y[c-2]=p);W([],l,function(q){q=Ub(r,q,k,f,h);void 0===u[a].Y?(q.ja=c-2,u[a]=q):u[a].Y[c-2]=q;return[]});return[]})},b:function(b,a,c,d,e,f,h,g,l,k){a=Q(a);e=Z(d,e);W([],[b],function(p){p=p[0];var r=p.name+\".\"+a,u={get:function(){Tb(\"Cannot access \"+r+\" due to unbound types\",[c,h])},enumerable:!0,configurable:!0};u.set=l?()=>{Tb(\"Cannot access \"+r+\" due to unbound types\",\n[c,h])}:()=>{O(r+\" is a read-only property\")};Object.defineProperty(p.V.ea,a,u);W([],l?[c,h]:[c],function(v){var q=v[0],C={get:function(){var w=Wb(this,p,r+\" getter\");return q.fromWireType(e(f,w))},enumerable:!0};if(l){l=Z(g,l);var F=v[1];C.set=function(w){var A=Wb(this,p,r+\" setter\"),G=[];l(k,A,F.toWireType(G,w));Ab(G)}}Object.defineProperty(p.V.ea,a,C);return[]});return[]})},A:function(b,a){a=Q(a);Y(b,{name:a,fromWireType:function(c){var d=$a(c);Xb(c);return d},toWireType:function(c,d){return P(d)},\nargPackAdvance:8,readValueFromPointer:Bb,ba:null})},j:function(b,a,c,d){function e(){}c=Eb(c);a=Q(a);e.values={};Y(b,{name:a,constructor:e,fromWireType:function(f){return this.constructor.values[f]},toWireType:function(f,h){return h.value},argPackAdvance:8,readValueFromPointer:Zb(a,c,d),ba:null});Ib(a,e)},i:function(b,a,c){var d=kb(b,\"enum\");a=Q(a);b=d.constructor;d=Object.create(d.constructor.prototype,{value:{value:c},constructor:{value:Va(d.name+\"_\"+a,function(){})}});b.values[c]=d;b[a]=d},r:function(b,\na,c){c=Eb(c);a=Q(a);Y(b,{name:a,fromWireType:function(d){return d},toWireType:function(d,e){return e},argPackAdvance:8,readValueFromPointer:$b(a,c),ba:null})},q:function(b,a,c,d,e,f){var h=Vb(a,c);b=Q(b);e=Z(d,e);Ib(b,function(){Tb(\"Cannot call \"+b+\" due to unbound types\",h)},a-1);W([],h,function(g){Qb(b,Ub(b,[g[0],null].concat(g.slice(1)),null,e,f),a-1);return[]})},g:function(b,a,c,d,e){a=Q(a);-1===e&&(e=4294967295);e=Eb(c);var f=g=>g;if(0===d){var h=32-8*c;f=g=>g<<h>>>h}c=a.includes(\"unsigned\")?\nfunction(g,l){return l>>>0}:function(g,l){return l};Y(b,{name:a,fromWireType:f,toWireType:c,argPackAdvance:8,readValueFromPointer:ac(a,e,0!==d),ba:null})},d:function(b,a,c){function d(f){f>>=2;var h=J;return new e(za,h[f+1],h[f])}var e=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][a];c=Q(c);Y(b,{name:c,fromWireType:d,argPackAdvance:8,readValueFromPointer:d},{lb:!0})},s:function(b,a){a=Q(a);var c=\"std::string\"===a;Y(b,{name:a,fromWireType:function(d){var e=\nJ[d>>2],f=d+4;if(c)for(var h=f,g=0;g<=e;++g){var l=f+g;if(g==e||0==E[l]){h=h?ya(E,h,l-h):\"\";if(void 0===k)var k=h;else k+=String.fromCharCode(0),k+=h;h=l+1}}else{k=Array(e);for(g=0;g<e;++g)k[g]=String.fromCharCode(E[f+g]);k=k.join(\"\")}jb(d);return k},toWireType:function(d,e){e instanceof ArrayBuffer&&(e=new Uint8Array(e));var f,h=\"string\"==typeof e;h||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof Int8Array||O(\"Cannot pass non-string to std::string\");var g;if(c&&h)for(f=g=0;f<\ne.length;++f){var l=e.charCodeAt(f);127>=l?g++:2047>=l?g+=2:55296<=l&&57343>=l?(g+=4,++f):g+=3}else g=e.length;f=g;g=rc(4+f+1);l=g+4;J[g>>2]=f;if(c&&h){if(h=l,l=f+1,f=E,0<l){l=h+l-1;for(var k=0;k<e.length;++k){var p=e.charCodeAt(k);if(55296<=p&&57343>=p){var r=e.charCodeAt(++k);p=65536+((p&1023)<<10)|r&1023}if(127>=p){if(h>=l)break;f[h++]=p}else{if(2047>=p){if(h+1>=l)break;f[h++]=192|p>>6}else{if(65535>=p){if(h+2>=l)break;f[h++]=224|p>>12}else{if(h+3>=l)break;f[h++]=240|p>>18;f[h++]=128|p>>12&63}f[h++]=\n128|p>>6&63}f[h++]=128|p&63}}f[h]=0}}else if(h)for(h=0;h<f;++h)k=e.charCodeAt(h),255<k&&(jb(l),O(\"String has UTF-16 code units that do not fit in 8 bits\")),E[l+h]=k;else for(h=0;h<f;++h)E[l+h]=e[h];null!==d&&d.push(jb,g);return g},argPackAdvance:8,readValueFromPointer:Bb,ba:function(d){jb(d)}})},p:function(b,a,c){c=Q(c);if(2===a){var d=cc;var e=dc;var f=ec;var h=()=>Ca;var g=1}else 4===a&&(d=fc,e=gc,f=hc,h=()=>J,g=2);Y(b,{name:c,fromWireType:function(l){for(var k=J[l>>2],p=h(),r,u=l+4,v=0;v<=k;++v){var q=\nl+4+v*a;if(v==k||0==p[q>>g])u=d(u,q-u),void 0===r?r=u:(r+=String.fromCharCode(0),r+=u),u=q+a}jb(l);return r},toWireType:function(l,k){\"string\"!=typeof k&&O(\"Cannot pass non-string to C++ string type \"+c);var p=f(k),r=rc(4+p+a);J[r>>2]=p>>g;e(k,r+4,p+a);null!==l&&l.push(jb,r);return r},argPackAdvance:8,readValueFromPointer:Bb,ba:function(l){jb(l)}})},K:function(b,a,c,d,e,f){zb[b]={name:Q(a),xa:Z(c,d),ha:Z(e,f),Ja:[]}},J:function(b,a,c,d,e,f,h,g,l,k){zb[b].Ja.push({eb:Q(a),kb:c,ib:Z(d,e),jb:f,vb:h,\nub:Z(g,l),wb:k})},C:function(b,a){a=Q(a);Y(b,{nb:!0,name:a,argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},m:function(b,a,c){b=$a(b);a=kb(a,\"emval::as\");var d=[],e=P(d);J[c>>2]=e;return a.toWireType(d,b)},t:function(b,a,c,d,e){b=kc[b];a=$a(a);c=jc(c);var f=[];J[d>>2]=P(f);return b(a,c,f,e)},f:function(b,a,c,d){b=kc[b];a=$a(a);c=jc(c);b(a,c,null,d)},L:Xb,e:function(b,a){var c=mc(b,a),d=c[0];a=d.name+\"_$\"+c.slice(1).map(function(h){return h.name}).join(\"_\")+\"$\";var e=nc[a];if(void 0!==\ne)return e;var f=Array(b-1);e=lc((h,g,l,k)=>{for(var p=0,r=0;r<b-1;++r)f[r]=c[r+1].readValueFromPointer(k+p),p+=c[r+1].argPackAdvance;h=h[g].apply(h,f);for(r=0;r<b-1;++r)c[r+1].Za&&c[r+1].Za(f[r]);if(!d.nb)return d.toWireType(l,h)});return nc[a]=e},D:function(b){b=jc(b);return P(m[b])},H:function(b,a){b=$a(b);a=$a(a);return P(b[a])},E:function(b){4<b&&(M[b].ya+=1)},G:function(b){return P(jc(b))},F:function(b){var a=$a(b);Ab(a);Xb(b)},u:function(b,a){b=kb(b,\"_emval_take_value\");b=b.readValueFromPointer(a);\nreturn P(b)},v:function(){ua(\"\")},o:function(b){var a=E.length;b>>>=0;if(2147483648<b)return!1;for(var c=1;4>=c;c*=2){var d=a*(1+.2/c);d=Math.min(d,b+100663296);var e=Math;d=Math.max(b,d);e=e.min.call(e,2147483648,d+(65536-d%65536)%65536);a:{try{va.grow(e-za.byteLength+65535>>>16);Ga();var f=1;break a}catch(h){}f=void 0}if(f)return!0}return!1},z:function(){return 52},w:function(){return 70},y:function(b,a,c,d){for(var e=0,f=0;f<c;f++){var h=J[a>>2],g=J[a+4>>2];a+=8;for(var l=0;l<g;l++){var k=E[h+\nl],p=oc[b];0===k||10===k?((1===b?pa:qa)(ya(p,0)),p.length=0):p.push(k)}e+=g}J[d>>2]=e;return 0}};\n(function(){function b(e){m.asm=e.exports;va=m.asm.M;Ga();Ha=m.asm.S;Ja.unshift(m.asm.N);Ma--;m.monitorRunDependencies&&m.monitorRunDependencies(Ma);0==Ma&&(null!==Na&&(clearInterval(Na),Na=null),Oa&&(e=Oa,Oa=null,e()))}function a(e){b(e.instance)}function c(e){return Sa().then(function(f){return WebAssembly.instantiate(f,d)}).then(function(f){return f}).then(e,function(f){qa(\"failed to asynchronously prepare wasm: \"+f);ua(f)})}var d={a:sc};Ma++;m.monitorRunDependencies&&m.monitorRunDependencies(Ma);\nif(m.instantiateWasm)try{return m.instantiateWasm(d,b)}catch(e){return qa(\"Module.instantiateWasm callback failed with error: \"+e),!1}(function(){return ra||\"function\"!=typeof WebAssembly.instantiateStreaming||Pa()||K.startsWith(\"file://\")||\"function\"!=typeof fetch?c(a):fetch(K,{credentials:\"same-origin\"}).then(function(e){return WebAssembly.instantiateStreaming(e,d).then(a,function(f){qa(\"wasm streaming compile failed: \"+f);qa(\"falling back to ArrayBuffer instantiation\");return c(a)})})})().catch(ba);\nreturn{}})();m.___wasm_call_ctors=function(){return(m.___wasm_call_ctors=m.asm.N).apply(null,arguments)};var jb=m._free=function(){return(jb=m._free=m.asm.O).apply(null,arguments)},rc=m._malloc=function(){return(rc=m._malloc=m.asm.P).apply(null,arguments)},ib=m.___getTypeName=function(){return(ib=m.___getTypeName=m.asm.Q).apply(null,arguments)};m.__embind_initialize_bindings=function(){return(m.__embind_initialize_bindings=m.asm.R).apply(null,arguments)};\nm.dynCall_jiji=function(){return(m.dynCall_jiji=m.asm.T).apply(null,arguments)};var tc;Oa=function uc(){tc||vc();tc||(Oa=uc)};\nfunction vc(){function b(){if(!tc&&(tc=!0,m.calledRun=!0,!wa)){Ta(Ja);aa(m);if(m.onRuntimeInitialized)m.onRuntimeInitialized();if(m.postRun)for(\"function\"==typeof m.postRun&&(m.postRun=[m.postRun]);m.postRun.length;){var a=m.postRun.shift();Ka.unshift(a)}Ta(Ka)}}if(!(0<Ma)){if(m.preRun)for(\"function\"==typeof m.preRun&&(m.preRun=[m.preRun]);m.preRun.length;)La();Ta(Ia);0<Ma||(m.setStatus?(m.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){m.setStatus(\"\")},1);b()},1)):b())}}\nif(m.preInit)for(\"function\"==typeof m.preInit&&(m.preInit=[m.preInit]);0<m.preInit.length;)m.preInit.pop()();vc();\n\n\n  return Rive.ready\n}\n);\n})();\nexport default Rive;","/**\n * Registers mouse move/up/down callback handlers on the canvas to send meaningful coordinates to\n * the state machine pointer move/up/down functions based on cursor interaction\n */\nexport const registerTouchInteractions = ({\n  canvas,\n  artboard,\n  stateMachines = [],\n  renderer,\n  rive,\n  fit,\n  alignment,\n}) => {\n  if (!canvas || !stateMachines.length || !renderer || !rive || !artboard) {\n    return null;\n  }\n\n  const mouseCallback = (event) => {\n    const boundingRect = event.currentTarget.getBoundingClientRect();\n\n    const canvasX = event.clientX - boundingRect.left;\n    const canvasY = event.clientY - boundingRect.top;\n    const forwardMatrix = rive.computeAlignment(\n      fit,\n      alignment,\n      {\n        minX: 0,\n        minY: 0,\n        maxX: boundingRect.width,\n        maxY: boundingRect.height,\n      },\n      artboard.bounds\n    );\n    let invertedMatrix = new rive.Mat2D();\n    forwardMatrix.invert(invertedMatrix);\n    const canvasCoordinatesVector = new rive.Vec2D(canvasX, canvasY);\n    const transformedVector = rive.mapXY(\n      invertedMatrix,\n      canvasCoordinatesVector\n    );\n    const transformedX = transformedVector.x();\n    const transformedY = transformedVector.y();\n\n    transformedVector.delete();\n    invertedMatrix.delete();\n    canvasCoordinatesVector.delete();\n    forwardMatrix.delete();\n\n    switch (event.type) {\n      // Pointer moving/hovering on the canvas\n      case \"mouseover\":\n      case \"mouseout\":\n      case \"mousemove\": {\n        for (const stateMachine of stateMachines) {\n          stateMachine.pointerMove(transformedX, transformedY);\n        }\n        break;\n      }\n      // Pointer click initiated but not released yet on the canvas\n      case \"mousedown\": {\n        for (const stateMachine of stateMachines) {\n          stateMachine.pointerDown(transformedX, transformedY);\n        }\n        break;\n      }\n      // Pointer click released on the canvas\n      case \"mouseup\": {\n        for (const stateMachine of stateMachines) {\n          stateMachine.pointerUp(transformedX, transformedY);\n        }\n        break;\n      }\n      default:\n    }\n  };\n  const callback = mouseCallback.bind(this);\n  canvas.addEventListener(\"mouseover\", callback);\n  canvas.addEventListener(\"mouseout\", callback);\n  canvas.addEventListener(\"mousemove\", callback);\n  canvas.addEventListener(\"mousedown\", callback);\n  canvas.addEventListener(\"mouseup\", callback);\n  return () => {\n    canvas.removeEventListener(\"mouseover\", callback);\n    canvas.removeEventListener(\"mouseout\", callback);\n    canvas.removeEventListener(\"mousemove\", callback);\n    canvas.removeEventListener(\"mousedown\", callback);\n    canvas.removeEventListener(\"mouseup\", callback);\n  };\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as rc from \"./rive_advanced.mjs\";\nimport * as packageData from \"package.json\";\nimport { registerTouchInteractions } from \"./utils\";\n\n/**\n * Generic type for a parameterless void callback\n */\nexport type VoidCallback = () => void;\n\n// Tracks playback states; numbers map to the runtime's numerical values\n// i.e. play: 0, pause: 1, stop: 2\nenum PlaybackState {\n  Play = 0,\n  Pause,\n  Stop,\n}\n\n/**\n * Interface for artboard bounds\n */\nexport interface Bounds extends rc.AABB {}\n\n// #region layout\n\n// Fit options for the canvas\nexport enum Fit {\n  Cover = \"cover\",\n  Contain = \"contain\",\n  Fill = \"fill\",\n  FitWidth = \"fitWidth\",\n  FitHeight = \"fitHeight\",\n  None = \"none\",\n  ScaleDown = \"scaleDown\",\n}\n\n// Alignment options for the canvas\nexport enum Alignment {\n  Center = \"center\",\n  TopLeft = \"topLeft\",\n  TopCenter = \"topCenter\",\n  TopRight = \"topRight\",\n  CenterLeft = \"centerLeft\",\n  CenterRight = \"centerRight\",\n  BottomLeft = \"bottomLeft\",\n  BottomCenter = \"bottomCenter\",\n  BottomRight = \"bottomRight\",\n}\n\n// Interface for the Layout static method contructor\nexport interface LayoutParameters {\n  fit?: Fit;\n  alignment?: Alignment;\n  minX?: number;\n  minY?: number;\n  maxX?: number;\n  maxY?: number;\n}\n\n// Alignment options for Rive animations in a HTML canvas\nexport class Layout {\n  // Runtime fit and alignment are accessed every frame, so we cache their\n  // values to save cycles\n  private cachedRuntimeFit: rc.Fit;\n  private cachedRuntimeAlignment: rc.Alignment;\n\n  public readonly fit: Fit;\n  public readonly alignment: Alignment;\n  public readonly minX: number;\n  public readonly minY: number;\n  public readonly maxX: number;\n  public readonly maxY: number;\n\n  constructor(params?: LayoutParameters) {\n    this.fit = params?.fit ?? Fit.Contain;\n    this.alignment = params?.alignment ?? Alignment.Center;\n    this.minX = params?.minX ?? 0;\n    this.minY = params?.minY ?? 0;\n    this.maxX = params?.maxX ?? 0;\n    this.maxY = params?.maxY ?? 0;\n  }\n\n  // Alternative constructor to build a Layout from an interface/object\n  static new({\n    fit,\n    alignment,\n    minX,\n    minY,\n    maxX,\n    maxY,\n  }: LayoutParameters): Layout {\n    console.warn(\n      \"This function is deprecated: please use `new Layout({})` instead\"\n    );\n    return new Layout({ fit, alignment, minX, minY, maxX, maxY });\n  }\n\n  /**\n   * Makes a copy of the layout, replacing any specified parameters\n   */\n  public copyWith({\n    fit,\n    alignment,\n    minX,\n    minY,\n    maxX,\n    maxY,\n  }: LayoutParameters): Layout {\n    return new Layout({\n      fit: fit ?? this.fit,\n      alignment: alignment ?? this.alignment,\n      minX: minX ?? this.minX,\n      minY: minY ?? this.minY,\n      maxX: maxX ?? this.maxX,\n      maxY: maxY ?? this.maxY,\n    });\n  }\n\n  // Returns fit for the Wasm runtime format\n  public runtimeFit(rive: rc.RiveCanvas): rc.Fit {\n    if (this.cachedRuntimeFit) return this.cachedRuntimeFit;\n\n    let fit;\n    if (this.fit === Fit.Cover) fit = rive.Fit.cover;\n    else if (this.fit === Fit.Contain) fit = rive.Fit.contain;\n    else if (this.fit === Fit.Fill) fit = rive.Fit.fill;\n    else if (this.fit === Fit.FitWidth) fit = rive.Fit.fitWidth;\n    else if (this.fit === Fit.FitHeight) fit = rive.Fit.fitHeight;\n    else if (this.fit === Fit.ScaleDown) fit = rive.Fit.scaleDown;\n    else fit = rive.Fit.none;\n\n    this.cachedRuntimeFit = fit;\n    return fit;\n  }\n\n  // Returns alignment for the Wasm runtime format\n  public runtimeAlignment(rive: rc.RiveCanvas): rc.Alignment {\n    if (this.cachedRuntimeAlignment) return this.cachedRuntimeAlignment;\n\n    let alignment;\n    if (this.alignment === Alignment.TopLeft)\n      alignment = rive.Alignment.topLeft;\n    else if (this.alignment === Alignment.TopCenter)\n      alignment = rive.Alignment.topCenter;\n    else if (this.alignment === Alignment.TopRight)\n      alignment = rive.Alignment.topRight;\n    else if (this.alignment === Alignment.CenterLeft)\n      alignment = rive.Alignment.centerLeft;\n    else if (this.alignment === Alignment.CenterRight)\n      alignment = rive.Alignment.centerRight;\n    else if (this.alignment === Alignment.BottomLeft)\n      alignment = rive.Alignment.bottomLeft;\n    else if (this.alignment === Alignment.BottomCenter)\n      alignment = rive.Alignment.bottomCenter;\n    else if (this.alignment === Alignment.BottomRight)\n      alignment = rive.Alignment.bottomRight;\n    else alignment = rive.Alignment.center;\n\n    this.cachedRuntimeAlignment = alignment;\n    return alignment;\n  }\n}\n\n// #endregion\n\n// #region runtime\n\n// Callback type when looking for a runtime instance\nexport type RuntimeCallback = (rive: rc.RiveCanvas) => void;\n\n// Runtime singleton; use getInstance to provide a callback that returns the\n// Rive runtime\nexport class RuntimeLoader {\n  // Singleton helpers\n  private static runtime: rc.RiveCanvas;\n  // Flag to indicate that loading has started/completed\n  private static isLoading: boolean = false;\n  // List of callbacks for the runtime that come in while loading\n  private static callBackQueue: RuntimeCallback[] = [];\n  // Instance of the Rive runtime\n  private static rive: rc.RiveCanvas;\n  // Path to the Wasm file; default path works for testing only;\n  // if embedded wasm is used then this is never used.\n  private static wasmURL: string = `https://unpkg.com/${packageData.name}@${packageData.version}/rive.wasm`;\n\n  // Class is never instantiated\n  private constructor() {}\n\n  // Loads the runtime\n  private static loadRuntime(): void {\n    rc.default({\n      // Loads Wasm bundle\n      locateFile: (_: string) => RuntimeLoader.wasmURL,\n    }).then((rive: rc.RiveCanvas) => {\n      RuntimeLoader.runtime = rive;\n      // Fire all the callbacks\n      while (RuntimeLoader.callBackQueue.length > 0) {\n        RuntimeLoader.callBackQueue.shift()?.(RuntimeLoader.runtime);\n      }\n    });\n  }\n\n  // Provides a runtime instance via a callback\n  public static getInstance(callback: RuntimeCallback): void {\n    // If it's not loading, start loading runtime\n    if (!RuntimeLoader.isLoading) {\n      RuntimeLoader.isLoading = true;\n      RuntimeLoader.loadRuntime();\n    }\n    if (!RuntimeLoader.runtime) {\n      RuntimeLoader.callBackQueue.push(callback);\n    } else {\n      callback(RuntimeLoader.runtime);\n    }\n  }\n\n  // Provides a runtime instance via a promise\n  public static awaitInstance(): Promise<rc.RiveCanvas> {\n    return new Promise<rc.RiveCanvas>((resolve, reject) =>\n      RuntimeLoader.getInstance((rive: rc.RiveCanvas): void => resolve(rive))\n    );\n  }\n\n  // Manually sets the wasm url\n  public static setWasmUrl(url: string): void {\n    RuntimeLoader.wasmURL = url;\n  }\n}\n\n// #endregion\n\n// #region animations\n\n// Wraps animations and instances from the runtime and keeps track of playback\n// state\nclass Animation {\n  public loopCount: number = 0;\n  public readonly instance: rc.LinearAnimationInstance;\n\n  // Time to which the animation should move to on the next render\n  public scrubTo: number | null = null;\n\n  /**\n   * Constructs a new animation\n   * @constructor\n   * @param {any} animation: runtime animation object\n   * @param {any} instance: runtime animation instance object\n   */\n  constructor(\n    private animation: rc.LinearAnimationInstance,\n    private artboard: rc.Artboard,\n    runtime: rc.RiveCanvas,\n    public playing: boolean\n  ) {\n    this.instance = new runtime.LinearAnimationInstance(animation, artboard);\n  }\n\n  // Returns the animation's name\n  public get name(): string {\n    return this.animation.name;\n  }\n\n  // Returns the animation's current time\n  public get time(): number {\n    return this.instance.time;\n  }\n\n  // Sets the animation's current time\n  public set time(value: number) {\n    this.instance.time = value;\n  }\n\n  // Returns the animation's loop type\n  public get loopValue(): number {\n    return this.animation.loopValue;\n  }\n\n  /**\n   * Advances the animation by the give time. If the animation needs scrubbing,\n   * time is ignored and the stored scrub value is used.\n   * @param time the time to advance the animation by if no scrubbing required\n   */\n  public advance(time: number) {\n    if (this.scrubTo === null) {\n      this.instance.advance(time);\n    } else {\n      this.instance.time = 0;\n      this.instance.advance(this.scrubTo);\n      this.scrubTo = null;\n    }\n  }\n\n  /**\n   * Apply interpolated keyframe values to the artboard. This should be called after calling\n   * .advance() on an animation instance so that new values are applied to properties.\n   *\n   * Note: This does not advance the artboard, which updates all objects on the artboard\n   * @param mix - Mix value for the animation from 0 to 1\n   */\n  public apply(mix: number) {\n    this.instance.apply(mix);\n  }\n\n  public get needsScrub(): boolean {\n    return this.scrubTo !== null;\n  }\n\n  /**\n   * Deletes the backing Wasm animation instance; once this is called, this\n   * animation is no more.\n   */\n  public cleanup() {\n    this.instance.delete();\n  }\n}\n\n// #endregion\n\n// #region state machines\n\nexport enum StateMachineInputType {\n  Number = 56,\n  Trigger = 58,\n  Boolean = 59,\n}\n\n/**\n * An input for a state machine\n */\nexport class StateMachineInput {\n  constructor(\n    public readonly type: StateMachineInputType,\n    private runtimeInput: rc.SMIInput\n  ) {}\n\n  /**\n   * Returns the name of the input\n   */\n  public get name(): string {\n    return this.runtimeInput.name;\n  }\n\n  /**\n   * Returns the current value of the input\n   */\n  public get value(): number | boolean {\n    return this.runtimeInput.value;\n  }\n\n  /**\n   * Sets the value of the input\n   */\n  public set value(value: number | boolean) {\n    this.runtimeInput.value = value;\n  }\n\n  /**\n   * Fires a trigger; does nothing on Number or Boolean input types\n   */\n  public fire(): void {\n    if (this.type === StateMachineInputType.Trigger) {\n      this.runtimeInput.fire();\n    }\n  }\n}\n\nclass StateMachine {\n  /**\n   * Caches the inputs from the runtime\n   */\n  public readonly inputs: StateMachineInput[] = [];\n\n  /**\n   * Runtime state machine instance\n   */\n  public readonly instance: rc.StateMachineInstance;\n\n  /**\n   * @constructor\n   * @param stateMachine runtime state machine object\n   * @param instance runtime state machine instance object\n   */\n  constructor(\n    private stateMachine: rc.StateMachineInstance,\n    runtime: rc.RiveCanvas,\n    public playing: boolean,\n    private artboard: rc.Artboard\n  ) {\n    this.instance = new runtime.StateMachineInstance(stateMachine, artboard);\n    this.initInputs(runtime);\n  }\n\n  public get name(): string {\n    return this.stateMachine.name;\n  }\n\n  /**\n   * Returns a list of state names that have changed on this frame\n   */\n  public get statesChanged(): string[] {\n    const names: string[] = [];\n    for (let i = 0; i < this.instance.stateChangedCount(); i++) {\n      names.push(this.instance.stateChangedNameByIndex(i));\n    }\n    return names;\n  }\n\n  /**\n   * Advances the state machine instance by a given time.\n   * @param time - the time to advance the animation by in seconds\n   */\n  public advance(time: number) {\n    this.instance.advance(time);\n  }\n\n  /**\n   * Fetches references to the state machine's inputs and caches them\n   * @param runtime an instance of the runtime; needed for the SMIInput types\n   */\n  private initInputs(runtime: rc.RiveCanvas): void {\n    // Fetch the inputs from the runtime if we don't have them\n    for (let i = 0; i < this.instance.inputCount(); i++) {\n      const input = this.instance.input(i);\n      this.inputs.push(this.mapRuntimeInput(input, runtime));\n    }\n  }\n\n  /**\n   * Maps a runtime input to it's appropriate type\n   * @param input\n   */\n  private mapRuntimeInput(\n    input: rc.SMIInput,\n    runtime: rc.RiveCanvas\n  ): StateMachineInput {\n    if (input.type === runtime.SMIInput.bool) {\n      return new StateMachineInput(\n        StateMachineInputType.Boolean,\n        input.asBool()\n      );\n    } else if (input.type === runtime.SMIInput.number) {\n      return new StateMachineInput(\n        StateMachineInputType.Number,\n        input.asNumber()\n      );\n    } else if (input.type === runtime.SMIInput.trigger) {\n      return new StateMachineInput(\n        StateMachineInputType.Trigger,\n        input.asTrigger()\n      );\n    }\n  }\n\n  /**\n   * Deletes the backing Wasm state machine instance; once this is called, this\n   * state machine is no more.\n   */\n  public cleanup() {\n    this.instance.delete();\n  }\n}\n\n// #endregion\n\n// #region animator\n\n/**\n * Manages animation\n */\nclass Animator {\n  /**\n   * Constructs a new animator\n   * @constructor\n   * @param runtime Rive runtime; needed to instance animations & state machines\n   * @param artboard the artboard that holds all animations and state machines\n   * @param animations optional list of animations\n   * @param stateMachines optional list of state machines\n   */\n  constructor(\n    private runtime: rc.RiveCanvas,\n    private artboard: rc.Artboard,\n    private eventManager: EventManager,\n    public readonly animations: Animation[] = [],\n    public readonly stateMachines: StateMachine[] = []\n  ) {}\n\n  /**\n   * Adds animations and state machines by their names. If names are shared\n   * between animations & state machines, then the first one found will be\n   * created. Best not to use the same names for these in your Rive file.\n   * @param animatable the name(s) of animations and state machines to add\n   * @returns a list of names of the playing animations and state machines\n   */\n  public add(\n    animatables: string | string[],\n    playing: boolean,\n    fireEvent = true\n  ): string[] {\n    animatables = mapToStringArray(animatables);\n    // If animatables is empty, play or pause everything\n    if (animatables.length === 0) {\n      this.animations.forEach((a) => (a.playing = playing));\n      this.stateMachines.forEach((m) => (m.playing = playing));\n    } else {\n      // Play/pause already instanced items, or create new instances\n      const instancedAnimationNames = this.animations.map((a) => a.name);\n      const instancedMachineNames = this.stateMachines.map((m) => m.name);\n      for (const i in animatables) {\n        const aIndex = instancedAnimationNames.indexOf(animatables[i]);\n        const mIndex = instancedMachineNames.indexOf(animatables[i]);\n        if (aIndex >= 0 || mIndex >= 0) {\n          if (aIndex >= 0) {\n            // Animation is instanced, play/pause it\n            this.animations[aIndex].playing = playing;\n          } else {\n            // State machine is instanced, play/pause it\n            this.stateMachines[mIndex].playing = playing;\n          }\n        } else {\n          // Try to create a new animation instance\n          const anim = this.artboard.animationByName(animatables[i]);\n          if (anim) {\n            const newAnimation = new Animation(\n              anim,\n              this.artboard,\n              this.runtime,\n              playing\n            );\n            // Display the first frame of the specified animation\n            newAnimation.advance(0);\n            newAnimation.apply(1.0);\n            this.animations.push(newAnimation);\n          } else {\n            // Try to create a new state machine instance\n            const sm = this.artboard.stateMachineByName(animatables[i]);\n            if (sm) {\n              const newStateMachine = new StateMachine(\n                sm,\n                this.runtime,\n                playing,\n                this.artboard\n              );\n              this.stateMachines.push(newStateMachine);\n            }\n          }\n        }\n      }\n    }\n    // Fire play/paused events for animations\n    if (fireEvent) {\n      if (playing) {\n        this.eventManager.fire({\n          type: EventType.Play,\n          data: this.playing,\n        });\n      } else {\n        this.eventManager.fire({\n          type: EventType.Pause,\n          data: this.paused,\n        });\n      }\n    }\n\n    return playing ? this.playing : this.paused;\n  }\n\n  /**\n   * Play the named animations/state machines\n   * @param animatables the names of the animations/machines to play; plays all if empty\n   * @returns a list of the playing items\n   */\n  public play(animatables: string | string[]): string[] {\n    return this.add(animatables, true);\n  }\n\n  /**\n   * Pauses named animations and state machines, or everything if nothing is\n   * specified\n   * @param animatables names of the animations and state machines to pause\n   * @returns a list of names of the animations and state machines paused\n   */\n  public pause(animatables: string[]): string[] {\n    return this.add(animatables, false);\n  }\n\n  /**\n   * Set time of named animations\n   * @param animations names of the animations to scrub\n   * @param value time scrub value, a floating point number to which the playhead is jumped\n   * @returns a list of names of the animations that were scrubbed\n   */\n  public scrub(animatables: string[], value: number): string[] {\n    const forScrubbing = this.animations.filter((a) =>\n      animatables.includes(a.name)\n    );\n    forScrubbing.forEach((a) => (a.scrubTo = value));\n    return forScrubbing.map((a) => a.name);\n  }\n\n  /**\n   * Returns a list of names of all animations and state machines currently\n   * playing\n   */\n  public get playing(): string[] {\n    return this.animations\n      .filter((a) => a.playing)\n      .map((a) => a.name)\n      .concat(this.stateMachines.filter((m) => m.playing).map((m) => m.name));\n  }\n\n  /**\n   * Returns a list of names of all animations and state machines currently\n   * paused\n   */\n  public get paused(): string[] {\n    return this.animations\n      .filter((a) => !a.playing)\n      .map((a) => a.name)\n      .concat(this.stateMachines.filter((m) => !m.playing).map((m) => m.name));\n  }\n\n  /**\n   * Stops and removes all named animations and state machines\n   * @param animatables animations and state machines to remove\n   * @returns a list of names of removed items\n   */\n  public stop(animatables?: string[] | string): string[] {\n    animatables = mapToStringArray(animatables);\n\n    // If nothing's specified, wipe them out, all of them\n    let removedNames: string[] = [];\n    // Stop everything\n    if (animatables.length === 0) {\n      removedNames = this.animations\n        .map((a) => a.name)\n        .concat(this.stateMachines.map((m) => m.name));\n      // Clean up before emptying the arrays\n      this.animations.forEach((a) => a.cleanup());\n      this.stateMachines.forEach((m) => m.cleanup());\n      // Empty out the arrays\n      this.animations.splice(0, this.animations.length);\n      this.stateMachines.splice(0, this.stateMachines.length);\n    } else {\n      // Remove only the named animations/state machines\n      const animationsToRemove = this.animations.filter((a) =>\n        animatables.includes(a.name)\n      );\n\n      animationsToRemove.forEach((a) => {\n        a.cleanup();\n        this.animations.splice(this.animations.indexOf(a), 1);\n      });\n      const machinesToRemove = this.stateMachines.filter((m) =>\n        animatables.includes(m.name)\n      );\n      machinesToRemove.forEach((m) => {\n        m.cleanup();\n        this.stateMachines.splice(this.stateMachines.indexOf(m), 1);\n      });\n      removedNames = animationsToRemove\n        .map((a) => a.name)\n        .concat(machinesToRemove.map((m) => m.name));\n    }\n\n    this.eventManager.fire({\n      type: EventType.Stop,\n      data: removedNames,\n    });\n\n    // Return the list of animations removed\n    return removedNames;\n  }\n\n  /**\n   * Returns true if at least one animation is active\n   */\n  public get isPlaying(): boolean {\n    return (\n      this.animations.reduce((acc, curr) => acc || curr.playing, false) ||\n      this.stateMachines.reduce((acc, curr) => acc || curr.playing, false)\n    );\n  }\n\n  /**\n   * Returns true if all animations are paused and there's at least one animation\n   */\n  public get isPaused(): boolean {\n    return (\n      !this.isPlaying &&\n      (this.animations.length > 0 || this.stateMachines.length > 0)\n    );\n  }\n\n  /**\n   * Returns true if there are no playing or paused animations/state machines\n   */\n  public get isStopped(): boolean {\n    return this.animations.length === 0 && this.stateMachines.length === 0;\n  }\n\n  /**\n   * If there are no animations or state machines, add the first one found\n   * @returns the name of the animation or state machine instanced\n   */\n  public atLeastOne(playing: boolean, fireEvent = true): string {\n    let instancedName: string;\n    if (this.animations.length === 0 && this.stateMachines.length === 0) {\n      if (this.artboard.animationCount() > 0) {\n        // Add the first animation\n        this.add(\n          [(instancedName = this.artboard.animationByIndex(0).name)],\n          playing,\n          fireEvent\n        );\n      } else if (this.artboard.stateMachineCount() > 0) {\n        // Add the first state machine\n        this.add(\n          [(instancedName = this.artboard.stateMachineByIndex(0).name)],\n          playing,\n          fireEvent\n        );\n      }\n    }\n    return instancedName;\n  }\n\n  /**\n   * Checks if any animations have looped and if so, fire the appropriate event\n   */\n  public handleLooping() {\n    for (const animation of this.animations.filter((a) => a.playing)) {\n      // Emit if the animation looped\n      if (animation.loopValue === 0 && animation.loopCount) {\n        animation.loopCount = 0;\n        // This is a one-shot; if it has ended, delete the instance\n        this.stop(animation.name);\n      } else if (animation.loopValue === 1 && animation.loopCount) {\n        this.eventManager.fire({\n          type: EventType.Loop,\n          data: { animation: animation.name, type: LoopType.Loop },\n        });\n        animation.loopCount = 0;\n      }\n      // Wasm indicates a loop at each time the animation\n      // changes direction, so a full loop/lap occurs every\n      // two loop counts\n      else if (animation.loopValue === 2 && animation.loopCount > 1) {\n        this.eventManager.fire({\n          type: EventType.Loop,\n          data: { animation: animation.name, type: LoopType.PingPong },\n        });\n        animation.loopCount = 0;\n      }\n    }\n  }\n\n  /**\n   * Checks if states have changed in state machines and fires a statechange\n   * event\n   */\n  public handleStateChanges() {\n    const statesChanged: string[] = [];\n    for (const stateMachine of this.stateMachines.filter((sm) => sm.playing)) {\n      statesChanged.push(...stateMachine.statesChanged);\n    }\n    if (statesChanged.length > 0) {\n      this.eventManager.fire({\n        type: EventType.StateChange,\n        data: statesChanged,\n      });\n    }\n  }\n}\n\n// #endregion\n\n// #region events\n\n/**\n * Supported event types triggered in Rive\n */\nexport enum EventType {\n  Load = \"load\",\n  LoadError = \"loaderror\",\n  Play = \"play\",\n  Pause = \"pause\",\n  Stop = \"stop\",\n  Loop = \"loop\",\n  Draw = \"draw\",\n  StateChange = \"statechange\",\n}\n\n// Event fired by Rive\nexport interface Event {\n  type: EventType;\n  data?: string | string[] | LoopEvent;\n}\n\n/**\n * Looping types: one-shot, loop, and ping-pong\n */\nexport enum LoopType {\n  OneShot = \"oneshot\", // has value 0 in runtime\n  Loop = \"loop\", // has value 1 in runtime\n  PingPong = \"pingpong\", // has value 2 in runtime\n}\n\n/**\n * Loop events are returned through onloop callbacks\n */\nexport interface LoopEvent {\n  animation: string;\n  type: LoopType;\n}\n\n/**\n * Loop events are returned through onloop callbacks\n */\nexport type EventCallback = (event: Event) => void;\n\n/**\n * Event listeners registered with the event manager\n */\nexport interface EventListener {\n  type: EventType;\n  callback: EventCallback;\n}\n\n/**\n * FPS Reporting through callbacks sent to the WASM runtime\n */\nexport type FPSCallback = (fps: number) => void;\n\n// Manages Rive events and listeners\nclass EventManager {\n  constructor(private listeners: EventListener[] = []) {}\n\n  // Gets listeners of specified type\n  private getListeners(type: EventType): EventListener[] {\n    return this.listeners.filter((e) => e.type === type);\n  }\n\n  // Adds a listener\n  public add(listener: EventListener): void {\n    if (!this.listeners.includes(listener)) {\n      this.listeners.push(listener);\n    }\n  }\n\n  /**\n   * Removes a listener\n   * @param listener the listener with the callback to be removed\n   */\n  public remove(listener: EventListener): void {\n    // We can't simply look for the listener as it'll be a different instance to\n    // one originally subscribed. Find all the listeners of the right type and\n    // then check their callbacks which should match.\n    for (let i = 0; i < this.listeners.length; i++) {\n      const currentListener = this.listeners[i];\n      if (currentListener.type === listener.type) {\n        if (currentListener.callback === listener.callback) {\n          this.listeners.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Clears all listeners of specified type, or every listener if no type is\n   * specified\n   * @param type the type of listeners to clear, or all listeners if not\n   * specified\n   */\n  public removeAll(type?: EventType) {\n    if (!type) {\n      this.listeners.splice(0, this.listeners.length);\n    } else {\n      this.listeners\n        .filter((l) => l.type === type)\n        .forEach((l) => this.remove(l));\n    }\n  }\n\n  // Fires an event\n  public fire(event: Event): void {\n    const eventListeners = this.getListeners(event.type);\n    eventListeners.forEach((listener) => listener.callback(event));\n  }\n}\n\n// #endregion\n\n// #region Manages a queue of tasks\n\n// A task in the queue; will fire the action when the queue is processed; will\n// also optionally fire an event.\nexport interface Task {\n  action: VoidCallback;\n  event?: Event;\n}\n\n// Manages a queue of tasks\nclass TaskQueueManager {\n  private queue: Task[] = [];\n\n  constructor(private eventManager: EventManager) {}\n\n  // Adds a task top the queue\n  public add(task: Task): void {\n    this.queue.push(task);\n  }\n\n  // Processes all tasks in the queue\n  public process(): void {\n    while (this.queue.length > 0) {\n      const task = this.queue.shift();\n      task?.action();\n      if (task?.event) {\n        this.eventManager.fire(task.event);\n      }\n    }\n  }\n}\n\n// #endregion\n\n// #region Rive\n\n// Interface for the Rive static method contructor\nexport interface RiveParameters {\n  canvas: HTMLCanvasElement | OffscreenCanvas; // canvas is required\n  src?: string; // one of src or buffer is required\n  buffer?: ArrayBuffer; // one of src or buffer is required\n  artboard?: string;\n  animations?: string | string[];\n  stateMachines?: string | string[];\n  layout?: Layout;\n  autoplay?: boolean;\n  useOffscreenRenderer?: boolean;\n  onLoad?: EventCallback;\n  onLoadError?: EventCallback;\n  onPlay?: EventCallback;\n  onPause?: EventCallback;\n  onStop?: EventCallback;\n  onLoop?: EventCallback;\n  onStateChange?: EventCallback;\n  /**\n   * @deprecated Use `onLoad()` instead\n   */\n  onload?: EventCallback;\n  /**\n   * @deprecated Use `onLoadError()` instead\n   */\n  onloaderror?: EventCallback;\n  /**\n   * @deprecated Use `onPoad()` instead\n   */\n  onplay?: EventCallback;\n  /**\n   * @deprecated Use `onPause()` instead\n   */\n  onpause?: EventCallback;\n  /**\n   * @deprecated Use `onStop()` instead\n   */\n  onstop?: EventCallback;\n  /**\n   * @deprecated Use `onLoop()` instead\n   */\n  onloop?: EventCallback;\n  /**\n   * @deprecated Use `onStateChange()` instead\n   */\n  onstatechange?: EventCallback;\n}\n\n// Interface to Rive.load function\nexport interface RiveLoadParameters {\n  src?: string;\n  buffer?: ArrayBuffer;\n  autoplay?: boolean;\n  artboard?: string;\n  animations?: string | string[];\n  stateMachines?: string | string[];\n  useOffscreenRenderer?: boolean;\n}\n\n// Interface ot Rive.reset function\nexport interface RiveResetParameters {\n  artboard?: string;\n  animations?: string | string[];\n  stateMachines?: string | string[];\n  autoplay?: boolean;\n}\n\nexport class Rive {\n  // Canvas in which to render the artboard\n  private readonly canvas: HTMLCanvasElement | OffscreenCanvas;\n\n  // A url to a Rive file; may be undefined if a buffer is specified\n  private src: string;\n\n  // Raw Rive file data; may be undefined if a src is specified\n  private buffer: ArrayBuffer;\n\n  // The layout for rendering in the canvas\n  private _layout: Layout;\n\n  // Flag to indicate if the layout has changed; used by the renderer to know\n  // when to align\n  private _updateLayout: boolean = true;\n\n  // The runtime renderer\n  private renderer: rc.Renderer;\n\n  /**\n   * Flag to active/deactivate renderer\n   */\n  private isRendererActive = true;\n\n  // Tracks if a Rive file is loaded\n  private loaded: boolean = false;\n\n  /**\n   * Tracks if a Rive file is loaded; we need this in addition to loaded as some\n   * commands (e.g. contents) can be called as soon as the file is loaded.\n   * However, playback commands need to be queued and run in order once initial\n   * animations and autoplay has been sorted out. This applies to play, pause,\n   * and start.\n   */\n  private readyForPlaying: boolean = false;\n\n  // Wasm runtime\n  private runtime: rc.RiveCanvas;\n\n  // Runtime artboard\n  private artboard: rc.Artboard | null = null;\n\n  // place to clear up event listeners\n  private eventCleanup: Function | null = null;\n\n  // Runtime file\n  private file: rc.File;\n\n  // Holds event listeners\n  private eventManager: EventManager;\n\n  // Manages the loading task queue\n  private taskQueue: TaskQueueManager;\n\n  // Animator: manages animations and state machines\n  private animator: Animator;\n\n  // Error message for missing source or buffer\n  private static readonly missingErrorMessage: string =\n    \"Rive source file or data buffer required\";\n\n  // Durations to generate a frame for the last second. Used for performance profiling.\n  public durations: number[] = [];\n  public frameTimes: number[] = [];\n  public frameCount: number = 0;\n\n  constructor(params: RiveParameters) {\n    this.canvas = params.canvas;\n    this.src = params.src;\n    this.buffer = params.buffer;\n    this.layout = params.layout ?? new Layout();\n\n    // New event management system\n    this.eventManager = new EventManager();\n    if (params.onLoad) this.on(EventType.Load, params.onLoad);\n    if (params.onLoadError) this.on(EventType.LoadError, params.onLoadError);\n    if (params.onPlay) this.on(EventType.Play, params.onPlay);\n    if (params.onPause) this.on(EventType.Pause, params.onPause);\n    if (params.onStop) this.on(EventType.Stop, params.onStop);\n    if (params.onLoop) this.on(EventType.Loop, params.onLoop);\n    if (params.onStateChange)\n      this.on(EventType.StateChange, params.onStateChange);\n\n    /**\n     * @deprecated Use camelCase'd versions instead.\n     */\n    if (params.onload && !params.onLoad) this.on(EventType.Load, params.onload);\n    if (params.onloaderror && !params.onLoadError)\n      this.on(EventType.LoadError, params.onloaderror);\n    if (params.onplay && !params.onPlay) this.on(EventType.Play, params.onplay);\n    if (params.onpause && !params.onPause)\n      this.on(EventType.Pause, params.onpause);\n    if (params.onstop && !params.onStop) this.on(EventType.Stop, params.onstop);\n    if (params.onloop && !params.onLoop) this.on(EventType.Loop, params.onloop);\n    if (params.onstatechange && !params.onStateChange)\n      this.on(EventType.StateChange, params.onstatechange);\n\n    // Hook up the task queue\n    this.taskQueue = new TaskQueueManager(this.eventManager);\n\n    this.init({\n      src: this.src,\n      buffer: this.buffer,\n      autoplay: params.autoplay,\n      animations: params.animations,\n      stateMachines: params.stateMachines,\n      artboard: params.artboard,\n      useOffscreenRenderer: params.useOffscreenRenderer,\n    });\n  }\n\n  // Alternative constructor to build a Rive instance from an interface/object\n  public static new(params: RiveParameters): Rive {\n    console.warn(\n      \"This function is deprecated: please use `new Rive({})` instead\"\n    );\n    return new Rive(params);\n  }\n\n  // Initializes the Rive object either from constructor or load()\n  private init({\n    src,\n    buffer,\n    animations,\n    stateMachines,\n    artboard,\n    autoplay = false,\n    useOffscreenRenderer = false,\n  }: RiveLoadParameters): void {\n    this.src = src;\n    this.buffer = buffer;\n\n    // If no source file url specified, it's a bust\n    if (!this.src && !this.buffer) {\n      throw new Error(Rive.missingErrorMessage);\n    }\n\n    // List of animations that should be initialized.\n    const startingAnimationNames = mapToStringArray(animations);\n\n    // List of state machines that should be initialized\n    const startingStateMachineNames = mapToStringArray(stateMachines);\n\n    // Ensure loaded is marked as false if loading new file\n    this.loaded = false;\n    this.readyForPlaying = false;\n\n    // Ensure the runtime is loaded\n    RuntimeLoader.awaitInstance()\n      .then((runtime) => {\n        this.runtime = runtime;\n\n        // Get the canvas where you want to render the animation and create a renderer\n        this.renderer = this.runtime.makeRenderer(\n          this.canvas,\n          useOffscreenRenderer\n        );\n\n        // Initial size adjustment based on devicePixelRatio if no width/height are specified explicitly\n        if (!(this.canvas.width || this.canvas.height)) {\n          this.resizeDrawingSurfaceToCanvas();\n        }\n\n        // Load Rive data from a source uri or a data buffer\n        this.initData(\n          artboard,\n          startingAnimationNames,\n          startingStateMachineNames,\n          autoplay\n        )\n          .then(() => {\n            const activeStateMachineInstances = (\n              this.animator.stateMachines || []\n            )\n              .filter((sm) => sm.playing)\n              .map((sm) => sm.instance);\n            this.eventCleanup = registerTouchInteractions({\n              canvas: this.canvas,\n              artboard: this.artboard,\n              stateMachines: activeStateMachineInstances,\n              renderer: this.renderer,\n              rive: this.runtime,\n              fit: this._layout.runtimeFit(this.runtime),\n              alignment: this._layout.runtimeAlignment(this.runtime),\n            });\n          })\n          .catch((e) => {\n            console.error(e);\n          });\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  }\n\n  // Initializes runtime with Rive data and preps for playing\n  private async initData(\n    artboardName: string,\n    animationNames: string[],\n    stateMachineNames: string[],\n    autoplay: boolean\n  ): Promise<void> {\n    // Load the buffer from the src if provided\n    if (this.src) {\n      this.buffer = await loadRiveFile(this.src);\n    }\n    // Load the Rive file\n    this.file = await this.runtime.load(new Uint8Array(this.buffer));\n\n    if (this.file) {\n      // Initialize and draw frame\n      this.initArtboard(\n        artboardName,\n        animationNames,\n        stateMachineNames,\n        autoplay\n      );\n\n      // Everything's set up, emit a load event\n      this.loaded = true;\n      this.eventManager.fire({\n        type: EventType.Load,\n        data: this.src ?? \"buffer\",\n      });\n\n      // Flag ready for playback commands and clear the task queue; this order\n      // is important or it may infinitely recurse\n      this.readyForPlaying = true;\n      this.taskQueue.process();\n\n      this.drawFrame();\n\n      return Promise.resolve();\n    } else {\n      const msg = \"Problem loading file; may be corrupt!\";\n      console.warn(msg);\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      return Promise.reject(msg);\n    }\n  }\n\n  // Initialize for playback\n  private initArtboard(\n    artboardName: string,\n    animationNames: string[],\n    stateMachineNames: string[],\n    autoplay: boolean\n  ): void {\n    // Fetch the artboard\n    const rootArtboard = artboardName\n      ? this.file.artboardByName(artboardName)\n      : this.file.defaultArtboard();\n\n    // Check we have a working artboard\n    if (!rootArtboard) {\n      const msg = \"Invalid artboard name or no default artboard\";\n      console.warn(msg);\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      return;\n    }\n\n    this.artboard = rootArtboard;\n\n    // Check that the artboard has at least 1 animation\n    if (this.artboard.animationCount() < 1) {\n      const msg = \"Artboard has no animations\";\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      throw msg;\n    }\n\n    // Initialize the animator\n    this.animator = new Animator(\n      this.runtime,\n      this.artboard,\n      this.eventManager\n    );\n\n    // Initialize the animations; as loaded hasn't happened yet, we need to\n    // suppress firing the play/pause events until the load event has fired. To\n    // do this we tell the animator to suppress firing events, and add event\n    // firing to the task queue.\n    let instanceNames: string[];\n    if (animationNames.length > 0 || stateMachineNames.length > 0) {\n      instanceNames = animationNames.concat(stateMachineNames);\n      this.animator.add(instanceNames, autoplay, false);\n    } else {\n      instanceNames = [this.animator.atLeastOne(autoplay, false)];\n    }\n    // Queue up firing the playback events\n    this.taskQueue.add({\n      action: () => {},\n      event: {\n        type: autoplay ? EventType.Play : EventType.Pause,\n        data: instanceNames,\n      },\n    });\n  }\n\n  // Draws the current artboard frame\n  public drawFrame() {\n    this.startRendering();\n  }\n\n  // Tracks the last timestamp at which the animation was rendered. Used only in\n  // draw().\n  private lastRenderTime: number;\n\n  // Tracks the current animation frame request\n  private frameRequestId: number | null;\n\n  /**\n   * Used be draw to track when a second of active rendering time has passed. Used for debugging purposes\n   */\n  private renderSecondTimer: number = 0;\n\n  /**\n   * Draw rendering loop; renders animation frames at the correct time interval.\n   * @param time the time at which to render a frame\n   */\n  private draw(time: number, onSecond?: VoidCallback): void {\n    const before = performance.now();\n\n    // Clear the frameRequestId, as we're now rendering a fresh frame\n    this.frameRequestId = null;\n\n    // On the first pass, make sure lastTime has a valid value\n    if (!this.lastRenderTime) {\n      this.lastRenderTime = time;\n    }\n\n    // Handle the onSecond callback\n    this.renderSecondTimer += time - this.lastRenderTime;\n    if (this.renderSecondTimer > 5000) {\n      this.renderSecondTimer = 0;\n      onSecond?.();\n    }\n\n    // Calculate the elapsed time between frames in seconds\n    const elapsedTime = (time - this.lastRenderTime) / 1000;\n    this.lastRenderTime = time;\n\n    // - Advance non-paused animations by the elapsed number of seconds\n    // - Advance any animations that require scrubbing\n    // - Advance to the first frame even when autoplay is false\n    const activeAnimations = this.animator.animations\n      .filter((a) => a.playing || a.needsScrub)\n      // The scrubbed animations must be applied first to prevent weird artifacts\n      // if the playing animations conflict with the scrubbed animating attribuates.\n      .sort((first, second) => (first.needsScrub ? -1 : 1));\n    for (const animation of activeAnimations) {\n      animation.advance(elapsedTime);\n      if (animation.instance.didLoop) {\n        animation.loopCount += 1;\n      }\n      animation.apply(1.0);\n    }\n\n    // - Advance non-paused state machines by the elapsed number of seconds\n    // - Advance to the first frame even when autoplay is false\n    const activeStateMachines = this.animator.stateMachines.filter(\n      (a) => a.playing\n    );\n    for (const stateMachine of activeStateMachines) {\n      stateMachine.advance(elapsedTime);\n      // stateMachine.instance.apply(this.artboard);\n    }\n\n    // Once the animations have been applied to the artboard, advance it\n    // by the elapsed time.\n    this.artboard.advance(elapsedTime);\n\n    const { renderer } = this;\n    // Canvas must be wiped to prevent artifacts\n    renderer.clear();\n    renderer.save();\n\n    // Update the renderer alignment if necessary\n    this.alignRenderer();\n\n    this.artboard.draw(renderer);\n\n    renderer.restore();\n    renderer.flush();\n\n    // Check for any animations that looped\n    this.animator.handleLooping();\n\n    // Check for any state machines that had a state change\n    this.animator.handleStateChanges();\n\n    // Add duration to create frame to durations array\n    this.frameCount++;\n    const after = performance.now();\n    this.frameTimes.push(after);\n    this.durations.push(after - before);\n    while (this.frameTimes[0] <= after - 1000) {\n      this.frameTimes.shift();\n      this.durations.shift();\n    }\n\n    // Calling requestAnimationFrame will rerun draw() at the correct rate:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_animations\n    if (this.animator.isPlaying) {\n      // Request a new rendering frame\n      this.startRendering();\n    } else if (this.animator.isPaused) {\n      // Reset the end time so on playback it starts at the correct frame\n      this.lastRenderTime = 0;\n    } else if (this.animator.isStopped) {\n      // Reset animation instances, artboard and time\n      // TODO: implement this properly when we have instancing\n      // this.initArtboard();\n      // this.drawFrame();\n      this.lastRenderTime = 0;\n    }\n  }\n\n  /**\n   * Align the renderer\n   */\n  private alignRenderer(): void {\n    const { renderer, runtime, _layout, artboard } = this;\n    // Align things up safe in the knowledge we can restore if changed\n    renderer.align(\n      _layout.runtimeFit(runtime),\n      _layout.runtimeAlignment(runtime),\n      {\n        minX: _layout.minX,\n        minY: _layout.minY,\n        maxX: _layout.maxX,\n        maxY: _layout.maxY,\n      },\n      artboard.bounds\n    );\n  }\n\n  public get fps() {\n    return this.durations.length;\n  }\n\n  public get frameTime() {\n    if (this.durations.length === 0) {\n      return 0;\n    }\n    return (\n      this.durations.reduce((a, b) => a + b, 0) / this.durations.length\n    ).toFixed(4);\n  }\n\n  /**\n   * Cleans up all Wasm-generated objects that need to be manually destroyed:\n   * artboard instances, animation instances, state machine instances,\n   * renderer instance, file and runtime.\n   *\n   * Once this is called, you will need to initialise a new instance of the\n   * Rive class\n   */\n  public cleanup() {\n    // Stop the renderer if it hasn't already been stopped.\n    this.stopRendering();\n    // Clean up any artboard, animation or state machine instances.\n    this.cleanupInstances();\n    // Delete the renderer\n    this.renderer.delete();\n    // Delete the rive file\n    this.file.delete();\n  }\n\n  /**\n   * Cleans up any Wasm-generated objects that need to be manually destroyed:\n   * artboard instances, animation instances, state machine instances.\n   *\n   * Once this is called, things will need to be reinitialized or bad things\n   * might happen.\n   */\n  public cleanupInstances() {\n    if (this.eventCleanup !== null) {\n      this.eventCleanup();\n    }\n    // Delete all animation and state machine instances\n    this.stop();\n    if (this.artboard) {\n      this.artboard.delete();\n      this.artboard = null;\n    }\n  }\n\n  // Plays specified animations; if none specified, it unpauses everything.\n  public play(animationNames?: string | string[], autoplay?: true): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, queue up the play\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.play(animationNames, autoplay),\n      });\n      return;\n    }\n    this.animator.play(animationNames);\n    this.startRendering();\n  }\n\n  // Pauses specified animations; if none specified, pauses all.\n  public pause(animationNames?: string | string[]): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.pause(animationNames),\n      });\n      return;\n    }\n    this.animator.pause(animationNames);\n  }\n\n  public scrub(animationNames?: string | string[], value?: number): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.scrub(animationNames, value),\n      });\n      return;\n    }\n\n    // Scrub the animation time; we draw a single frame here so that if\n    // nothing's currently playing, the scrubbed animation is still rendered/\n    this.animator.scrub(animationNames, value || 0);\n    this.drawFrame();\n  }\n\n  // Stops specified animations; if none specifies, stops them all.\n  public stop(animationNames?: string | string[] | undefined): void {\n    animationNames = mapToStringArray(animationNames);\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.stop(animationNames),\n      });\n      return;\n    }\n    this.animator.stop(animationNames);\n  }\n\n  /**\n   * Resets the animation\n   * @param artboard the name of the artboard, or default if none given\n   * @param animations the names of animations for playback\n   * @param stateMachines the names of state machines for playback\n   * @param autoplay whether to autoplay when reset, defaults to false\n   *\n   */\n  public reset(params?: RiveResetParameters): void {\n    // Get the current artboard, animations, state machines, and playback states\n    const artBoardName = params?.artboard;\n    const animationNames = mapToStringArray(params?.animations);\n    const stateMachineNames = mapToStringArray(params?.stateMachines);\n    const autoplay = params?.autoplay ?? false;\n\n    // Stop everything and clean up\n    this.cleanupInstances();\n\n    // Reinitialize an artboard instance with the state\n    this.initArtboard(\n      artBoardName,\n      animationNames,\n      stateMachineNames,\n      autoplay\n    );\n    this.taskQueue.process();\n  }\n\n  // Loads a new Rive file, keeping listeners in place\n  public load(params: RiveLoadParameters): void {\n    // Stop all animations\n    this.stop();\n    // Reinitialize\n    this.init(params);\n  }\n\n  // Sets a new layout\n  public set layout(layout: Layout) {\n    this._layout = layout;\n    // If the maxX or maxY are 0, then set them to the canvas width and height\n    if (!layout.maxX || !layout.maxY) {\n      this.resizeToCanvas();\n    }\n    if (this.loaded && !this.animator.isPlaying) {\n      this.drawFrame();\n    }\n  }\n\n  /**\n   * Returns the current layout. Note that layout should be treated as\n   * immutable. If you want to change the layout, create a new one use the\n   * layout setter\n   */\n  public get layout() {\n    return this._layout;\n  }\n\n  /**\n   * Sets the layout bounds to the current canvas size; this is typically called\n   * when the canvas is resized\n   */\n  public resizeToCanvas() {\n    this._layout = this.layout.copyWith({\n      minX: 0,\n      minY: 0,\n      maxX: this.canvas.width,\n      maxY: this.canvas.height,\n    });\n  }\n\n  /**\n   * Accounts for devicePixelRatio as a multiplier to render the size of the canvas drawing surface.\n   * Uses the size of the backing canvas to set new width/height attributes. Need to re-render\n   * and resize the layout to match the new drawing surface afterwards. Useful function for consumers\n   * to include in a window resize listener\n   */\n  public resizeDrawingSurfaceToCanvas() {\n    if (this.canvas instanceof HTMLCanvasElement && !!window) {\n      const { width, height } = this.canvas.getBoundingClientRect();\n      const dpr = window.devicePixelRatio || 1;\n      this.canvas.width = dpr * width;\n      this.canvas.height = dpr * height;\n      this.startRendering();\n      this.resizeToCanvas();\n    }\n  }\n\n  // Returns the animation source, which may be undefined\n  public get source(): string {\n    return this.src;\n  }\n\n  /**\n   * Returns the name of the active artboard\n   */\n  public get activeArtboard(): string {\n    return this.artboard ? this.artboard.name : \"\";\n  }\n\n  // Returns a list of animation names on the chosen artboard\n  public get animationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    const animationNames: string[] = [];\n    for (let i = 0; i < this.artboard.animationCount(); i++) {\n      animationNames.push(this.artboard.animationByIndex(i).name);\n    }\n    return animationNames;\n  }\n\n  /**\n   * Returns a list of state machine names from the current artboard\n   */\n  public get stateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    const stateMachineNames: string[] = [];\n    for (let i = 0; i < this.artboard.stateMachineCount(); i++) {\n      stateMachineNames.push(this.artboard.stateMachineByIndex(i).name);\n    }\n    return stateMachineNames;\n  }\n\n  /**\n   * Returns the inputs for the specified instanced state machine, or an empty\n   * list if the name is invalid or the state machine is not instanced\n   * @param name the state machine name\n   * @returns the inputs for the named state machine\n   */\n  public stateMachineInputs(name: string): StateMachineInput[] {\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.loaded) {\n      return;\n    }\n    const stateMachine = this.animator.stateMachines.find(\n      (m) => m.name === name\n    );\n    return stateMachine?.inputs;\n  }\n\n  // Returns a list of playing machine names\n  public get playingStateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.stateMachines\n      .filter((m) => m.playing)\n      .map((m) => m.name);\n  }\n\n  // Returns a list of playing animation names\n  public get playingAnimationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.animations.filter((a) => a.playing).map((a) => a.name);\n  }\n\n  // Returns a list of paused animation names\n  public get pausedAnimationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.animations\n      .filter((a) => !a.playing)\n      .map((a) => a.name);\n  }\n\n  /**\n   *  Returns a list of paused machine names\n   * @returns a list of state machine names that are paused\n   */\n  public get pausedStateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.stateMachines\n      .filter((m) => !m.playing)\n      .map((m) => m.name);\n  }\n\n  /**\n   * @returns true if any animation is playing\n   */\n  public get isPlaying(): boolean {\n    return this.animator.isPlaying;\n  }\n\n  /**\n   * @returns true if all instanced animations are paused\n   */\n  public get isPaused(): boolean {\n    return this.animator.isPaused;\n  }\n\n  /**\n   * @returns true if no animations are playing or paused\n   */\n  public get isStopped(): boolean {\n    return this.animator.isStopped;\n  }\n\n  /**\n   * @returns the bounds of the current artboard, or undefined if the artboard\n   * isn't loaded yet.\n   */\n  public get bounds(): Bounds {\n    return this.artboard ? this.artboard.bounds : undefined;\n  }\n\n  /**\n   * Subscribe to Rive-generated events\n   * @param type the type of event to subscribe to\n   * @param callback callback to fire when the event occurs\n   */\n  public on(type: EventType, callback: EventCallback) {\n    this.eventManager.add({\n      type: type,\n      callback: callback,\n    });\n  }\n\n  /**\n   * Unsubscribes from a Rive-generated event\n   * @param callback the callback to unsubscribe from\n   */\n  public unsubscribe(type: EventType, callback: EventCallback) {\n    this.eventManager.remove({\n      type: type,\n      callback: callback,\n    });\n  }\n\n  /**\n   * Unsubscribes all listeners from an event type, or everything if no type is\n   * given\n   * @param type the type of event to unsubscribe from, or all types if\n   * undefined\n   */\n  public unsubscribeAll(type?: EventType) {\n    this.eventManager.removeAll(type);\n  }\n\n  /**\n   * Stops the rendering loop; this is different from pausing in that it doesn't\n   * change the state of any animation. It stops rendering from occurring. This\n   * is designed for situations such as when Rive isn't visible.\n   *\n   * The only way to start rendering again is to call `startRendering`.\n   * Animations that are marked as playing will start from the position that\n   * they would have been at if rendering had not been stopped.\n   */\n  public stopRendering() {\n    if (this.loaded && this.frameRequestId) {\n      if (this.runtime.cancelAnimationFrame) {\n        this.runtime.cancelAnimationFrame(this.frameRequestId);\n      } else {\n        cancelAnimationFrame(this.frameRequestId);\n      }\n      this.frameRequestId = null;\n    }\n  }\n\n  /**\n   * Starts the rendering loop if it has been previously stopped. If the\n   * renderer is already active, then this will have zero effect.\n   */\n  public startRendering() {\n    if (this.loaded && this.artboard && !this.frameRequestId) {\n      if (this.runtime.requestAnimationFrame) {\n        this.frameRequestId = this.runtime.requestAnimationFrame(\n          this.draw.bind(this)\n        );\n      } else {\n        this.frameRequestId = requestAnimationFrame(this.draw.bind(this));\n      }\n    }\n  }\n\n  /**\n   * Enables frames-per-second (FPS) reporting for the runtime\n   * If no callback is provided, Rive will append a fixed-position div at the top-right corner of the page with the FPS reading\n   * @param fpsCallback - Callback from the runtime during the RAF loop that supplies the FPS value\n   */\n  public enableFPSCounter(fpsCallback?: FPSCallback) {\n    this.runtime.enableFPSCounter(fpsCallback);\n  }\n\n  /**\n   * Disables frames-per-second (FPS) reporting for the runtime\n   */\n  public disableFPSCounter() {\n    this.runtime.disableFPSCounter();\n  }\n\n  /**\n   * Returns the contents of a Rive file: the artboards, animations, and state machines\n   */\n  public get contents(): RiveFileContents {\n    if (!this.loaded) {\n      return undefined;\n    }\n    const riveContents: RiveFileContents = {\n      artboards: [],\n    };\n    for (let i = 0; i < this.file.artboardCount(); i++) {\n      const artboard = this.file.artboardByIndex(i);\n      const artboardContents: ArtboardContents = {\n        name: artboard.name,\n        animations: [],\n        stateMachines: [],\n      };\n      for (let j = 0; j < artboard.animationCount(); j++) {\n        const animation = artboard.animationByIndex(j);\n        artboardContents.animations.push(animation.name);\n      }\n      for (let k = 0; k < artboard.stateMachineCount(); k++) {\n        const stateMachine = artboard.stateMachineByIndex(k);\n        const name = stateMachine.name;\n        const instance = new this.runtime.StateMachineInstance(\n          stateMachine,\n          artboard\n        );\n        const inputContents: StateMachineInputContents[] = [];\n        for (let l = 0; l < instance.inputCount(); l++) {\n          const input = instance.input(l);\n          inputContents.push({ name: input.name, type: input.type });\n        }\n        artboardContents.stateMachines.push({\n          name: name,\n          inputs: inputContents,\n        });\n      }\n      riveContents.artboards.push(artboardContents);\n    }\n    return riveContents;\n  }\n}\n\n/**\n * Contents of a state machine input\n */\ninterface StateMachineInputContents {\n  name: string;\n  type: StateMachineInputType;\n  initialValue?: boolean | number;\n}\n\n/**\n * Contents of a state machine\n */\ninterface StateMachineContents {\n  name: string;\n  inputs: StateMachineInputContents[];\n}\n\n/**\n * Contents of an artboard\n */\ninterface ArtboardContents {\n  animations: string[];\n  stateMachines: StateMachineContents[];\n  name: string;\n}\n\n/**\n * contents of a Rive file\n */\ninterface RiveFileContents {\n  artboards?: ArtboardContents[];\n}\n\n// Loads Rive data from a URI via fetch.\nconst loadRiveFile = async (src: string): Promise<ArrayBuffer> => {\n  const req = new Request(src);\n  const res = await fetch(req);\n  const buffer = await res.arrayBuffer();\n  return buffer;\n};\n\n// #endregion\n\n// #region utility functions\n\n/*\n * Utility function to ensure an object is a string array\n */\nlet mapToStringArray = (obj?: string[] | string | undefined): string[] => {\n  if (typeof obj === \"string\") {\n    return [obj];\n  } else if (obj instanceof Array) {\n    return obj;\n  }\n  // If obj is undefined, return empty array\n  return [];\n};\n\n// #endregion\n\n// #region testing utilities\n\n// Exports to only be used for tests\nexport const Testing = {\n  EventManager: EventManager,\n  TaskQueueManager: TaskQueueManager,\n};\n\n// #endregion\n"],"names":["factory","$3015b282b063971c$var$humanFileSize","bytes","si","dp","thresh","Math","abs","units","u","r1","round","length","toFixed","_scriptDir","Rive","document","currentScript","src","undefined","m","aa","ba","ca","b","h","g","d","c","a","Map","forEach","l","k","console","error","this","La","e","fb","f","requestAnimationFrame","bind","set","cancelAnimationFrame","delete","size","cb","body","remove","createElement","style","backgroundColor","position","right","top","color","padding","innerHTML","appendChild","performance","now","$a","ea","assert","push","has","clearTimeout","get","setTimeout","max","keys","ready","Promise","fa","v","alpha","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","preferLowPowerToHighPerformance","failIfMajorPerformanceCaveat","enableExtensionsByDefault","explicitSwapControl","renderViaOffscreenBackBuffer","q","getContext","log","C","F","w","A","createShader","shaderSource","compileShader","getShaderInfoLog","attachShader","min","getParameter","MAX_RENDERBUFFER_SIZE","MAX_TEXTURE_SIZE","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","bindAttribLocation","linkProgram","getProgramInfoLog","getUniformLocation","useProgram","bindBuffer","ARRAY_BUFFER","createBuffer","enableVertexAttribArray","ELEMENT_ARRAY_BUFFER","uniform1i","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","ob","Ya","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","generateMipmap","p","r","bb","G","canvas","width","height","viewport","disable","SCISSOR_TEST","clearColor","clear","COLOR_BUFFER_BIT","enable","sort","z","da","Oa","bufferData","DYNAMIC_DRAW","bufferSubData","Aa","N","Ra","X","indices","image","va","Va","rb","scissor","Ea","Fa","Ka","yb","uniform4f","la","ra","sa","uniform2f","pb","qb","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","onRuntimeInitialized","n","srcOver","screen","overlay","darken","lighten","colorDodge","colorBurn","hardLight","softLight","difference","exclusion","multiply","hue","saturation","luminosity","drawWidth","drawHeight","reset","t","RenderPaintStyle","RenderPath","RenderPaint","Renderer","StrokeCap","StrokeJoin","BlendMode","fill","stroke","FillRule","evenOdd","RenderImage","extend","__construct","__parent","call","decode","Xa","total","y","D","Image","URL","createObjectURL","Blob","type","onload","Ta","loaded","B","ga","Path2D","addPath","DOMMatrix","xx","xy","yx","yy","tx","ty","fillRule","Ca","moveTo","lineTo","cubicTo","I","bezierCurveTo","close","closePath","Da","thickness","Wa","join","miter","ua","bevel","cap","butt","ta","square","Ua","blendMode","Sa","linearGradient","oa","Pa","Qa","Ha","Ia","za","radialGradient","mb","addStop","stop","completeGradient","draw","globalCompositeOperation","L","T","R","S","createRadialGradient","sqrt","createLinearGradient","U","H","addColorStop","strokeStyle","lineWidth","lineCap","lineJoin","fillStyle","Set","CanvasRenderer","Z","Ba","save","slice","restore","splice","transform","rotate","sin","cos","_drawPath","_drawImage","globalAlpha","drawImage","_getMatrix","_drawImageMesh","ia","ceil","ja","DynamicRectanizer","addRect","add","sb","Float32Array","Uint16Array","na","Yb","resetTransform","_clipPath","clip","clearRect","flush","translate","makeRenderer","renderFactory","makeRenderPaint","makeRenderPath","makeRenderImage","load","enableFPSCounter","disableFPSCounter","cleanup","ma","ha","Object","assign","ka","window","importScripts","x","self","location","href","indexOf","substr","replace","lastIndexOf","XMLHttpRequest","open","responseType","send","Uint8Array","response","status","onerror","pa","print","qa","printErr","warn","wasmBinary","noExitRuntime","WebAssembly","E","J","wa","xa","TextDecoder","ya","buffer","subarray","String","fromCharCode","Ga","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","HEAPU16","HEAPU32","Uint32Array","HEAPF32","HEAPF64","Float64Array","Ja","preRun","shift","unshift","K","Ma","Na","onAbort","RuntimeError","startsWith","locateFile","charCodeAt","apply","arguments","M","value","Error","name","message","stack","toString","prototype","create","constructor","Za","O","P","pop","ab","Q","db","eb","V","$","gb","hb","ib","jb","kb","lb","nb","count","W","tb","vb","wb","xb","FinalizationRegistry","unregister","register","zb","Ab","Bb","fromWireType","Cb","Db","Y","Array","hasOwnProperty","Eb","TypeError","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","clone","Ob","Pb","toWireType","Qb","includes","concat","Rb","Sb","Tb","map","Ub","Vb","Wb","Xb","Zb","$b","ac","bc","cc","dc","ec","fc","gc","hc","ic","jc","kc","nc","oc","BindingError","count_emval_handles","get_first_emval","PureVirtualError","pc","qc","getInheritedInstanceCount","getLiveInheritedInstances","flushPendingDeletes","setDelayFunction","InternalError","isAliasOf","getPrototypeOf","isDeleted","deleteLater","argPackAdvance","readValueFromPointer","deleteObject","ub","pointerType","UnboundTypeError","sc","defineProperty","implement","notifyOnDestruction","defineProperties","__destruct","read","write","Symbol","substring","enumerable","configurable","className","j","values","i","s","ArrayBuffer","Uint8ClampedArray","rc","mc","lc","o","grow","byteLength","asm","exports","monitorRunDependencies","clearInterval","instance","fetch","credentials","then","ok","arrayBuffer","catch","resolve","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","tc","_free","_malloc","___getTypeName","vc","calledRun","postRun","setStatus","__embind_initialize_bindings","dynCall_jiji","uc","preInit","__WEBPACK_DEFAULT_EXPORT__","registerTouchInteractions","artboard","stateMachines","renderer","rive","fit","alignment","callback","event","boundingRect","currentTarget","getBoundingClientRect","canvasX","clientX","left","canvasY","clientY","forwardMatrix","computeAlignment","minX","minY","maxX","maxY","bounds","invertedMatrix","Mat2D","invert","canvasCoordinatesVector","Vec2D","transformedVector","mapXY","transformedX","transformedY","stateMachine","pointerMove","stateMachine1","pointerDown","stateMachine2","pointerUp","addEventListener","removeEventListener","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module1","__webpack_modules__","definition","key","obj","prop","toStringTag","PlaybackState","Fit","Alignment","StateMachineInputType","Layout","params","_a","Contain","_b","Center","_c","_d","_e","_f","new","copyWith","runtimeFit","cachedRuntimeFit","Cover","cover","contain","Fill","FitWidth","fitWidth","FitHeight","fitHeight","ScaleDown","scaleDown","none","runtimeAlignment","cachedRuntimeAlignment","TopLeft","topLeft","TopCenter","topCenter","TopRight","topRight","CenterLeft","centerLeft","CenterRight","centerRight","BottomLeft","bottomLeft","BottomCenter","bottomCenter","BottomRight","bottomRight","center","RuntimeLoader","loadRuntime","_rive_advanced_mjs__WEBPACK_IMPORTED_MODULE_0__","default","_","wasmURL","runtime","callBackQueue","getInstance","isLoading","awaitInstance","reject","setWasmUrl","url","package_json__WEBPACK_IMPORTED_MODULE_1__","version","Animation","animation","playing","loopCount","scrubTo","LinearAnimationInstance","time","loopValue","advance","mix","EventType","LoopType","StateMachineInput","runtimeInput","fire","Trigger","StateMachine","inputs","StateMachineInstance","initInputs","names","stateChangedCount","stateChangedNameByIndex","inputCount","input","mapRuntimeInput","SMIInput","bool","Boolean","asBool","number","Number","asNumber","trigger","asTrigger","Animator","eventManager","animations","animatables","fireEvent","mapToStringArray","instancedAnimationNames","instancedMachineNames","aIndex","mIndex","anim","animationByName","newAnimation","sm","stateMachineByName","newStateMachine","Play","data","Pause","paused","play","pause","scrub","forScrubbing","filter","_this","removedNames","animationsToRemove","machinesToRemove","Stop","reduce","acc","curr","isPlaying","atLeastOne","instancedName","animationCount","animationByIndex","stateMachineCount","stateMachineByIndex","handleLooping","_i","Loop","PingPong","handleStateChanges","statesChanged","StateChange","EventManager","listeners","getListeners","listener","currentListener","removeAll","TaskQueueManager","queue","task","process","action","_updateLayout","isRendererActive","readyForPlaying","eventCleanup","durations","frameTimes","frameCount","renderSecondTimer","layout","onLoad","on","Load","onLoadError","LoadError","onPlay","onPause","onStop","onLoop","onStateChange","onloaderror","onplay","onpause","onstop","onloop","onstatechange","taskQueue","init","autoplay","useOffscreenRenderer","missingErrorMessage","startingAnimationNames","startingStateMachineNames","resizeDrawingSurfaceToCanvas","initData","activeStateMachineInstances","animator","_utils__WEBPACK_IMPORTED_MODULE_2__","_layout","artboardName","animationNames","stateMachineNames","loadRiveFile","sent","file","initArtboard","drawFrame","msg","instanceNames","rootArtboard","artboardByName","defaultArtboard","startRendering","onSecond","before","frameRequestId","lastRenderTime","elapsedTime","activeAnimations_1","needsScrub","first","second","didLoop","activeStateMachines_1","alignRenderer","after","isPaused","isStopped","align","stopRendering","cleanupInstances","artBoardName","resizeToCanvas","HTMLCanvasElement","dpr","devicePixelRatio","stateMachineInputs","find","unsubscribe","unsubscribeAll","fpsCallback","riveContents","artboards","artboardCount","artboardByIndex","artboardContents","name_1","inputContents","__awaiter","req","Request","Testing","$a0f52f3c3fa8aa5d$exports","async","currentRiveInstance","riveCanvas","getElementById","player","querySelector","dropContainer","fileSizeContainer","helperTextNode","displayFileSizeStats","res","fileSize","fileSizeText","createTextNode","display","url1","loadLottieFile","droppedFile","reader","FileReader","blob","result","replaceChildren","readAsText","target","readAsArrayBuffer","ev","preventDefault","dataTransfer","items","droppedItem","kind","getAsFile","splitName","split","extension","$3015b282b063971c$var$main"],"version":3,"file":"rive.d1c4abee.js.map"}